{
    "velvet-1.2.10+dfsg1": {
        "src/dfibpriv.h": [
            {
                "name": "dfh_comparedata",
                "start": 95,
                "end": 96
            }
        ],
        "src/dfib.c": [
            {
                "name": "allocateDFibHeapNode",
                "start": 58,
                "end": 61
            },
            {
                "name": "deallocateDFibHeapNode",
                "start": 63,
                "end": 66
            },
            {
                "name": "dfibheap_getSize",
                "start": 68,
                "end": 71
            },
            {
                "name": "ceillog2",
                "start": 83,
                "end": 107
            },
            {
                "name": "dfh_makekeyheap",
                "start": 112,
                "end": 127
            },
            {
                "name": "dfh_deleteheap",
                "start": 129,
                "end": 135
            },
            {
                "name": "dfh_insertkey",
                "start": 140,
                "end": 154
            },
            {
                "name": "dfh_replacekey",
                "start": 156,
                "end": 164
            },
            {
                "name": "dfh_replacekeydata",
                "start": 166,
                "end": 211
            },
            {
                "name": "dfh_extractmin",
                "start": 221,
                "end": 235
            },
            {
                "name": "dfh_replacedata",
                "start": 237,
                "end": 242
            },
            {
                "name": "dfh_delete",
                "start": 244,
                "end": 253
            },
            {
                "name": "dfh_extractminel",
                "start": 258,
                "end": 289
            },
            {
                "name": "dfh_insertrootlist",
                "start": 291,
                "end": 301
            },
            {
                "name": "dfh_removerootlist",
                "start": 303,
                "end": 309
            },
            {
                "name": "dfh_consolidate",
                "start": 311,
                "end": 353
            },
            {
                "name": "dfh_heaplink",
                "start": 355,
                "end": 365
            },
            {
                "name": "dfh_cut",
                "start": 367,
                "end": 374
            },
            {
                "name": "dfh_cascading_cut",
                "start": 376,
                "end": 389
            },
            {
                "name": "dfhe_newelem",
                "start": 394,
                "end": 410
            },
            {
                "name": "dfhe_insertafter",
                "start": 412,
                "end": 425
            },
            {
                "name": "dfhe_insertbefore",
                "start": 427,
                "end": 430
            },
            {
                "name": "dfhe_remove",
                "start": 432,
                "end": 454
            },
            {
                "name": "dfh_checkcons",
                "start": 456,
                "end": 474
            },
            {
                "name": "dfh_compare",
                "start": 476,
                "end": 483
            },
            {
                "name": "dfh_comparedata",
                "start": 485,
                "end": 494
            },
            {
                "name": "dfh_insertel",
                "start": 496,
                "end": 504
            },
            {
                "name": "dfibheap_el_getKey",
                "start": 506,
                "end": 509
            }
        ],
        "src/graph.h": [
            {
                "name": "newNode",
                "start": 29,
                "end": 31
            },
            {
                "name": "appendSequence",
                "start": 50,
                "end": 51
            },
            {
                "name": "addReadStart",
                "start": 65,
                "end": 66
            },
            {
                "name": "commonNodeReads",
                "start": 72,
                "end": 73
            },
            {
                "name": "extractBackOfNodeReads",
                "start": 74,
                "end": 77
            },
            {
                "name": "extractFrontOfNodeReads",
                "start": 78,
                "end": 82
            },
            {
                "name": "spreadReadIDs",
                "start": 86,
                "end": 87
            },
            {
                "name": "injectShortReads",
                "start": 88,
                "end": 89
            },
            {
                "name": "setVirtualCoverage",
                "start": 94,
                "end": 95
            },
            {
                "name": "incrementVirtualCoverage",
                "start": 96,
                "end": 97
            },
            {
                "name": "setOriginalVirtualCoverage",
                "start": 102,
                "end": 103
            },
            {
                "name": "incrementOriginalVirtualCoverage",
                "start": 104,
                "end": 105
            },
            {
                "name": "appendNodeSequence",
                "start": 133,
                "end": 134
            },
            {
                "name": "expandNodeFragment",
                "start": 135,
                "end": 136
            },
            {
                "name": "createAnalogousArc",
                "start": 144,
                "end": 145
            },
            {
                "name": "getShortReadMarkerAtIndex",
                "start": 168,
                "end": 169
            },
            {
                "name": "setShortReadMarkerPosition",
                "start": 174,
                "end": 175
            },
            {
                "name": "setShortReadMarkerOffset",
                "start": 178,
                "end": 179
            },
            {
                "name": "setInsertLengths",
                "start": 223,
                "end": 224
            }
        ],
        "src/tightString.h": [
            {
                "name": "getNucleotide",
                "start": 49,
                "end": 50
            },
            {
                "name": "readTightStringFragment",
                "start": 54,
                "end": 55
            },
            {
                "name": "getTightStringInArray",
                "start": 57,
                "end": 58
            },
            {
                "name": "writeNucleotideAtPosition",
                "start": 66,
                "end": 67
            },
            {
                "name": "newTightStringArrayFromStringArray",
                "start": 73,
                "end": 75
            }
        ],
        "src/fibHeap.h": [
            {
                "name": "insertNodeIntoHeap",
                "start": 26,
                "end": 27
            },
            {
                "name": "replaceKeyInHeap",
                "start": 31,
                "end": 32
            }
        ],
        "src/passageMarker.h": [
            {
                "name": "newPassageMarkerList",
                "start": 34,
                "end": 35
            },
            {
                "name": "addPassageMarker",
                "start": 42,
                "end": 43
            },
            {
                "name": "newPassageMarker",
                "start": 47,
                "end": 49
            },
            {
                "name": "exportMarker",
                "start": 72,
                "end": 73
            },
            {
                "name": "connectPassageMarkers",
                "start": 119,
                "end": 120
            },
            {
                "name": "concatenatePassageMarkers",
                "start": 134,
                "end": 135
            }
        ],
        "src/graphStats.h": [
            {
                "name": "exportLongNodeSequences",
                "start": 27,
                "end": 28
            },
            {
                "name": "removeLowCoverageNodesAndDenounceDubiousReads",
                "start": 38,
                "end": 43
            },
            {
                "name": "removeLowLongCoverageNodesAndDenounceDubiousReads",
                "start": 45,
                "end": 51
            },
            {
                "name": "exportAMOSContigs",
                "start": 55,
                "end": 56
            },
            {
                "name": "exportLongNodeMappings",
                "start": 66,
                "end": 67
            }
        ],
        "src/utility.h": [
            {
                "name": "exitErrorf",
                "start": 65,
                "end": 66
            },
            {
                "name": "velvetLog",
                "start": 69,
                "end": 70
            },
            {
                "name": "velvetFprintf",
                "start": 73,
                "end": 74
            }
        ],
        "src/correctedGraph.c": [
            {
                "name": "setNodeTime",
                "start": 95,
                "end": 98
            },
            {
                "name": "getNodeTime",
                "start": 100,
                "end": 103
            },
            {
                "name": "setNodePrevious",
                "start": 105,
                "end": 108
            },
            {
                "name": "getNodePrevious",
                "start": 110,
                "end": 113
            },
            {
                "name": "setNodeDHeapNode",
                "start": 115,
                "end": 118
            },
            {
                "name": "getNodeDHeapNode",
                "start": 120,
                "end": 123
            },
            {
                "name": "newTicket",
                "start": 125,
                "end": 132
            },
            {
                "name": "isPreviousToNode",
                "start": 134,
                "end": 155
            },
            {
                "name": "concatenateCommonTodoLists",
                "start": 157,
                "end": 269
            },
            {
                "name": "concatenateTodoListIntoActive",
                "start": 271,
                "end": 385
            },
            {
                "name": "concatenateTodoLists",
                "start": 387,
                "end": 393
            },
            {
                "name": "nextTodoTicket",
                "start": 395,
                "end": 420
            },
            {
                "name": "freeDoneTickets",
                "start": 422,
                "end": 433
            },
            {
                "name": "updateNodeStatus",
                "start": 435,
                "end": 460
            },
            {
                "name": "determineEligibleStartingPoints",
                "start": 462,
                "end": 502
            },
            {
                "name": "nextStartingPoint",
                "start": 504,
                "end": 519
            },
            {
                "name": "extractSequence",
                "start": 521,
                "end": 548
            },
            {
                "name": "max",
                "start": 550,
                "end": 558
            },
            {
                "name": "compareSequences",
                "start": 560,
                "end": 610
            },
            {
                "name": "mapSlowOntoFast",
                "start": 612,
                "end": 669
            },
            {
                "name": "remapNodeArcsOntoTarget",
                "start": 671,
                "end": 688
            },
            {
                "name": "remapNodeArcsOntoNeighbour",
                "start": 690,
                "end": 694
            },
            {
                "name": "remapNodeMarkersOntoNeighbour",
                "start": 696,
                "end": 852
            },
            {
                "name": "remapBackOfNodeArcsOntoNeighbour",
                "start": 854,
                "end": 862
            },
            {
                "name": "remapBackOfNodeMarkersOntoNeighbour",
                "start": 864,
                "end": 1193
            },
            {
                "name": "remapNodeInwardReferencesOntoNode",
                "start": 1195,
                "end": 1207
            },
            {
                "name": "remapNodeTimesOntoTargetNode",
                "start": 1209,
                "end": 1235
            },
            {
                "name": "foldSymmetricalNode",
                "start": 1237,
                "end": 1361
            },
            {
                "name": "remapNodeTimesOntoNeighbour",
                "start": 1363,
                "end": 1368
            },
            {
                "name": "remapNodeTimesOntoForwardMiddlePath",
                "start": 1370,
                "end": 1401
            },
            {
                "name": "remapNodeTimesOntoTwinMiddlePath",
                "start": 1403,
                "end": 1440
            },
            {
                "name": "remapNodeFibHeapReferencesOntoNode",
                "start": 1442,
                "end": 1462
            },
            {
                "name": "remapNodeOntoNeighbour",
                "start": 1464,
                "end": 1486
            },
            {
                "name": "remapBackOfNodeDescriptorOntoNeighbour",
                "start": 1488,
                "end": 1501
            },
            {
                "name": "remapBackOfNodeTimesOntoNeighbour",
                "start": 1503,
                "end": 1546
            },
            {
                "name": "remapBackOfNodeOntoNeighbour",
                "start": 1548,
                "end": 1571
            },
            {
                "name": "remapEmptyPathArcsOntoMiddlePathSimple",
                "start": 1573,
                "end": 1593
            },
            {
                "name": "remapEmptyPathMarkersOntoMiddlePathSimple",
                "start": 1595,
                "end": 1672
            },
            {
                "name": "markerFollowsPath",
                "start": 1674,
                "end": 1693
            },
            {
                "name": "getAnchors",
                "start": 1695,
                "end": 1718
            },
            {
                "name": "destroyPassageMarkerList",
                "start": 1720,
                "end": 1729
            },
            {
                "name": "remapEmptyPathMarkersOntoMiddlePathDevious",
                "start": 1731,
                "end": 1792
            },
            {
                "name": "markerLeadsToArc",
                "start": 1794,
                "end": 1812
            },
            {
                "name": "remapEmptyPathOntoMiddlePath",
                "start": 1814,
                "end": 1838
            },
            {
                "name": "reduceSlowNodes",
                "start": 1840,
                "end": 1848
            },
            {
                "name": "destroyPaths",
                "start": 1850,
                "end": 1865
            },
            {
                "name": "mapDistancesOntoPaths",
                "start": 1867,
                "end": 1890
            },
            {
                "name": "markerLeadsToNode",
                "start": 1892,
                "end": 1902
            },
            {
                "name": "transferNodeData",
                "start": 1904,
                "end": 1967
            },
            {
                "name": "concatenateNodesAndVaccinate",
                "start": 1971,
                "end": 2038
            },
            {
                "name": "simplifyNode",
                "start": 2040,
                "end": 2063
            },
            {
                "name": "concatenatePathNodes",
                "start": 2065,
                "end": 2074
            },
            {
                "name": "cleanUpRedundancy",
                "start": 2079,
                "end": 2183
            },
            {
                "name": "pathContainsReference",
                "start": 2185,
                "end": 2196
            },
            {
                "name": "comparePaths",
                "start": 2198,
                "end": 2292
            },
            {
                "name": "tourBusArc",
                "start": 2294,
                "end": 2336
            },
            {
                "name": "initializeTodoLists",
                "start": 2338,
                "end": 2388
            },
            {
                "name": "tourBusNode",
                "start": 2390,
                "end": 2425
            },
            {
                "name": "getTipLength",
                "start": 2427,
                "end": 2442
            },
            {
                "name": "clipTipsHard",
                "start": 2444,
                "end": 2498
            },
            {
                "name": "tourBus",
                "start": 2500,
                "end": 2516
            },
            {
                "name": "correctGraph",
                "start": 2518,
                "end": 2601
            },
            {
                "name": "setMaxReadLength",
                "start": 2603,
                "end": 2615
            },
            {
                "name": "setMaxGaps",
                "start": 2617,
                "end": 2628
            },
            {
                "name": "setMaxDivergence",
                "start": 2630,
                "end": 2642
            }
        ],
        "src/autoOpen.c": [
            {
                "name": "popenNoStderr",
                "start": 10,
                "end": 45
            },
            {
                "name": "pcloseNoStderr",
                "start": 47,
                "end": 53
            },
            {
                "name": "openFileAuto",
                "start": 58,
                "end": 96
            },
            {
                "name": "closeFileAuto",
                "start": 98,
                "end": 107
            }
        ],
        "src/readCoherentGraph.h": [
            {
                "name": "readCoherentGraph",
                "start": 24,
                "end": 25
            }
        ],
        "src/graphStats.c": [
            {
                "name": "copyMarkers",
                "start": 41,
                "end": 54
            },
            {
                "name": "removeDead",
                "start": 56,
                "end": 85
            },
            {
                "name": "chooseDestination",
                "start": 87,
                "end": 101
            },
            {
                "name": "destroyPassageMarkerList",
                "start": 103,
                "end": 112
            },
            {
                "name": "updateMarkers",
                "start": 114,
                "end": 120
            },
            {
                "name": "computeSubsequentNodesLength",
                "start": 122,
                "end": 156
            },
            {
                "name": "computeVirtualNodeLength",
                "start": 158,
                "end": 171
            },
            {
                "name": "nodeGenomicMultiplicity",
                "start": 174,
                "end": 188
            },
            {
                "name": "isOnlyGenome",
                "start": 190,
                "end": 200
            },
            {
                "name": "isOnlyStrain",
                "start": 202,
                "end": 212
            },
            {
                "name": "isSNP",
                "start": 214,
                "end": 256
            },
            {
                "name": "removeStrainMarkers",
                "start": 258,
                "end": 272
            },
            {
                "name": "commonLength",
                "start": 274,
                "end": 292
            },
            {
                "name": "isMixed",
                "start": 294,
                "end": 298
            },
            {
                "name": "countLocalBreakpoints",
                "start": 300,
                "end": 357
            },
            {
                "name": "genomeMarkerCount",
                "start": 359,
                "end": 370
            },
            {
                "name": "readCoverage",
                "start": 372,
                "end": 389
            },
            {
                "name": "refReadCoverage",
                "start": 391,
                "end": 402
            },
            {
                "name": "newReadCoverage",
                "start": 404,
                "end": 420
            },
            {
                "name": "printShortCounts",
                "start": 422,
                "end": 453
            },
            {
                "name": "displayGeneralStatistics",
                "start": 455,
                "end": 531
            },
            {
                "name": "displayLocalBreakpoint",
                "start": 533,
                "end": 666
            },
            {
                "name": "genomeMarker",
                "start": 668,
                "end": 681
            },
            {
                "name": "exportArcSequence",
                "start": 683,
                "end": 698
            },
            {
                "name": "projectGraphToFile",
                "start": 701,
                "end": 728
            },
            {
                "name": "allocateMask",
                "start": 732,
                "end": 738
            },
            {
                "name": "deallocateMask",
                "start": 740,
                "end": 743
            },
            {
                "name": "newMask",
                "start": 746,
                "end": 753
            },
            {
                "name": "lowCoverageRegions",
                "start": 755,
                "end": 823
            },
            {
                "name": "compareCoords",
                "start": 825,
                "end": 836
            },
            {
                "name": "sortCoords",
                "start": 838,
                "end": 840
            },
            {
                "name": "getShortReadCoords",
                "start": 842,
                "end": 851
            },
            {
                "name": "getShortReadTwinCoords",
                "start": 853,
                "end": 862
            },
            {
                "name": "getLongReadCoords",
                "start": 864,
                "end": 877
            },
            {
                "name": "findLowCoverageRegions",
                "start": 879,
                "end": 897
            },
            {
                "name": "exportLongNodeSequence",
                "start": 899,
                "end": 963
            },
            {
                "name": "exportLongNodeSequences",
                "start": 965,
                "end": 994
            },
            {
                "name": "maxLength",
                "start": 996,
                "end": 1009
            },
            {
                "name": "n50",
                "start": 1011,
                "end": 1043
            },
            {
                "name": "compareNodeCovs",
                "start": 1045,
                "end": 1074
            },
            {
                "name": "estimated_cov",
                "start": 1076,
                "end": 1139
            },
            {
                "name": "terminalReferenceMarker",
                "start": 1141,
                "end": 1151
            },
            {
                "name": "hasReferenceMarker",
                "start": 1153,
                "end": 1161
            },
            {
                "name": "destroyNodePassageMarkers",
                "start": 1163,
                "end": 1174
            },
            {
                "name": "removeNodeAndDenounceDubiousReads",
                "start": 1176,
                "end": 1220
            },
            {
                "name": "removeLowCoverageNodesAndDenounceDubiousReads",
                "start": 1222,
                "end": 1291
            },
            {
                "name": "getLongCoverage",
                "start": 1293,
                "end": 1301
            },
            {
                "name": "removeLowCoverageReferenceNodes",
                "start": 1303,
                "end": 1326
            },
            {
                "name": "removeLowLongCoverageNodesAndDenounceDubiousReads",
                "start": 1328,
                "end": 1395
            },
            {
                "name": "removeHighCoverageNodes",
                "start": 1397,
                "end": 1437
            },
            {
                "name": "exportAMOSLib",
                "start": 1439,
                "end": 1454
            },
            {
                "name": "exportAMOSMarker",
                "start": 1456,
                "end": 1498
            },
            {
                "name": "exportAMOSShortMarker",
                "start": 1500,
                "end": 1521
            },
            {
                "name": "exportAMOSReverseShortMarker",
                "start": 1523,
                "end": 1549
            },
            {
                "name": "exportAMOSContig",
                "start": 1551,
                "end": 1619
            },
            {
                "name": "exportAMOSNode",
                "start": 1621,
                "end": 1668
            },
            {
                "name": "exportAMOSRead",
                "start": 1670,
                "end": 1703
            },
            {
                "name": "exportAMOSContigs",
                "start": 1705,
                "end": 1770
            },
            {
                "name": "totalAssemblyLength",
                "start": 1772,
                "end": 1785
            },
            {
                "name": "usedReads",
                "start": 1787,
                "end": 1838
            },
            {
                "name": "logFinalStats",
                "start": 1840,
                "end": 1868
            },
            {
                "name": "exportUnusedReads",
                "start": 1870,
                "end": 1928
            },
            {
                "name": "getReferenceCount",
                "start": 1930,
                "end": 1938
            },
            {
                "name": "collectReferenceCoords",
                "start": 1953,
                "end": 2015
            },
            {
                "name": "compareReferenceMappings",
                "start": 2025,
                "end": 2035
            },
            {
                "name": "initializeReferenceMapping",
                "start": 2037,
                "end": 2043
            },
            {
                "name": "velvetFprintfReferenceMapping",
                "start": 2045,
                "end": 2075
            },
            {
                "name": "exportLongNodeMapping",
                "start": 2077,
                "end": 2109
            },
            {
                "name": "exportLongNodeMappings",
                "start": 2111,
                "end": 2146
            },
            {
                "name": "removeLowArcsFromNode",
                "start": 2148,
                "end": 2158
            },
            {
                "name": "removeLowArcs",
                "start": 2160,
                "end": 2167
            }
        ],
        "src/utility.c": [
            {
                "name": "allocExitError",
                "start": 31,
                "end": 42
            },
            {
                "name": "mallocOrExit3",
                "start": 44,
                "end": 51
            },
            {
                "name": "callocOrExit3",
                "start": 53,
                "end": 60
            },
            {
                "name": "reallocOrExit4",
                "start": 62,
                "end": 69
            },
            {
                "name": "setProgramName",
                "start": 74,
                "end": 77
            },
            {
                "name": "exitErrorf",
                "start": 79,
                "end": 96
            },
            {
                "name": "velvetLog",
                "start": 98,
                "end": 123
            },
            {
                "name": "velvetFprintf",
                "start": 125,
                "end": 141
            },
            {
                "name": "newStringBuffer",
                "start": 143,
                "end": 156
            },
            {
                "name": "destroyStringBuffer",
                "start": 158,
                "end": 166
            },
            {
                "name": "appendStringBuffer",
                "start": 168,
                "end": 190
            },
            {
                "name": "resetStringBuffer",
                "start": 192,
                "end": 199
            }
        ],
        "src/preGraph.h": [
            {
                "name": "createPreArc_pg",
                "start": 60,
                "end": 61
            },
            {
                "name": "createAnalogousPreArc_pg",
                "start": 62,
                "end": 63
            },
            {
                "name": "getPreArcBetweenPreNodes_pg",
                "start": 75,
                "end": 76
            },
            {
                "name": "addPreNodeToPreGraph_pg",
                "start": 89,
                "end": 91
            }
        ],
        "src/concatenatedPreGraph.c": [
            {
                "name": "concatenatePreNodes",
                "start": 30,
                "end": 129
            },
            {
                "name": "concatenatePreGraph_pg",
                "start": 134,
                "end": 180
            },
            {
                "name": "isEligibleTip",
                "start": 182,
                "end": 228
            },
            {
                "name": "clipTips_pg",
                "start": 230,
                "end": 262
            }
        ],
        "src/shortReadPairs.h": [
            {
                "name": "exploitShortReadPairs",
                "start": 24,
                "end": 28
            }
        ],
        "src/locallyCorrectedGraph.c": [
            {
                "name": "setNodeTime",
                "start": 67,
                "end": 70
            },
            {
                "name": "getNodeTime",
                "start": 72,
                "end": 75
            },
            {
                "name": "getNodePrevious",
                "start": 77,
                "end": 80
            },
            {
                "name": "isPreviousToNode",
                "start": 82,
                "end": 112
            },
            {
                "name": "extractSequence",
                "start": 114,
                "end": 141
            },
            {
                "name": "max",
                "start": 143,
                "end": 151
            },
            {
                "name": "compareSequences",
                "start": 153,
                "end": 199
            },
            {
                "name": "destroyPaths",
                "start": 201,
                "end": 216
            },
            {
                "name": "cleanUpRedundancy_local",
                "start": 218,
                "end": 227
            },
            {
                "name": "comparePaths_local",
                "start": 229,
                "end": 326
            },
            {
                "name": "tourBusArc_local",
                "start": 328,
                "end": 369
            },
            {
                "name": "tourBusNode_local",
                "start": 371,
                "end": 390
            },
            {
                "name": "isLocalDeadEnd",
                "start": 392,
                "end": 401
            },
            {
                "name": "isLocalTwinDeadEnd",
                "start": 403,
                "end": 413
            },
            {
                "name": "clipTipsVeryHardLocally",
                "start": 415,
                "end": 447
            },
            {
                "name": "tourBus_local",
                "start": 449,
                "end": 465
            },
            {
                "name": "prepareGraphForLocalCorrections",
                "start": 467,
                "end": 501
            },
            {
                "name": "correctGraphLocally",
                "start": 503,
                "end": 522
            },
            {
                "name": "deactivateLocalCorrectionSettings",
                "start": 524,
                "end": 541
            },
            {
                "name": "setLocalMaxReadLength",
                "start": 543,
                "end": 547
            },
            {
                "name": "setLocalMaxGaps",
                "start": 549,
                "end": 552
            },
            {
                "name": "setLocalMaxDivergence",
                "start": 554,
                "end": 557
            }
        ],
        "src/kmerOccurenceTable.c": [
            {
                "name": "compareKmerOccurences",
                "start": 53,
                "end": 58
            },
            {
                "name": "keyInAccelerationTable",
                "start": 60,
                "end": 64
            },
            {
                "name": "findKmerInKmerOccurenceTable",
                "start": 66,
                "end": 101
            },
            {
                "name": "newKmerOccurenceTable",
                "start": 103,
                "end": 127
            },
            {
                "name": "allocateKmerOccurences",
                "start": 129,
                "end": 138
            },
            {
                "name": "recordKmerOccurence",
                "start": 140,
                "end": 155
            },
            {
                "name": "sortKmerOccurenceTable",
                "start": 157,
                "end": 211
            },
            {
                "name": "getNextKmerOccurence",
                "start": 213,
                "end": 219
            },
            {
                "name": "destroyKmerOccurenceTable",
                "start": 221,
                "end": 228
            },
            {
                "name": "getKmerOccurenceNodeID",
                "start": 230,
                "end": 232
            },
            {
                "name": "getKmerOccurencePosition",
                "start": 234,
                "end": 236
            }
        ],
        "src/recycleBin.c": [
            {
                "name": "initRecycleBin",
                "start": 59,
                "end": 75
            },
            {
                "name": "newRecycleBin",
                "start": 77,
                "end": 92
            },
            {
                "name": "destroyRecycleBinChunks",
                "start": 94,
                "end": 104
            },
            {
                "name": "destroyRecycleBin",
                "start": 106,
                "end": 113
            },
            {
                "name": "allocatePointer",
                "start": 115,
                "end": 157
            },
            {
                "name": "deallocatePointer",
                "start": 159,
                "end": 167
            }
        ],
        "src/tightString.c": [
            {
                "name": "writeNucleotideNumber",
                "start": 47,
                "end": 64
            },
            {
                "name": "getTightStringInArray",
                "start": 66,
                "end": 70
            },
            {
                "name": "writeNucleotide",
                "start": 76,
                "end": 115
            },
            {
                "name": "fillTightStringWithString",
                "start": 117,
                "end": 129
            },
            {
                "name": "newTightStringArrayFromStringArray",
                "start": 134,
                "end": 163
            },
            {
                "name": "readNucleotide",
                "start": 165,
                "end": 179
            },
            {
                "name": "readTightString",
                "start": 181,
                "end": 221
            },
            {
                "name": "getNucleotide",
                "start": 223,
                "end": 239
            },
            {
                "name": "readTightStringFragment",
                "start": 241,
                "end": 261
            },
            {
                "name": "getNucleotideChar",
                "start": 263,
                "end": 281
            },
            {
                "name": "newTightString",
                "start": 283,
                "end": 298
            },
            {
                "name": "writeNucleotideAtPosition",
                "start": 300,
                "end": 310
            },
            {
                "name": "getLength",
                "start": 312,
                "end": 315
            },
            {
                "name": "destroyTightString",
                "start": 317,
                "end": 321
            },
            {
                "name": "setTightStringLength",
                "start": 323,
                "end": 340
            },
            {
                "name": "exportTightString",
                "start": 342,
                "end": 362
            }
        ],
        "src/kmer.c": [
            {
                "name": "resetWordFilter",
                "start": 61,
                "end": 144
            },
            {
                "name": "resetKeyFilter",
                "start": 146,
                "end": 248
            },
            {
                "name": "shiftRight",
                "start": 250,
                "end": 308
            },
            {
                "name": "copyKmers",
                "start": 310,
                "end": 326
            },
            {
                "name": "compareKmers",
                "start": 328,
                "end": 369
            },
            {
                "name": "clearKmer",
                "start": 371,
                "end": 386
            },
            {
                "name": "printKmer",
                "start": 388,
                "end": 405
            },
            {
                "name": "pushNucleotide",
                "start": 407,
                "end": 538
            },
            {
                "name": "popNucleotide",
                "start": 540,
                "end": 555
            },
            {
                "name": "reversePushNucleotide",
                "start": 557,
                "end": 588
            },
            {
                "name": "getKmerKey",
                "start": 590,
                "end": 652
            }
        ],
        "src/fibpriv.h": [
            {
                "name": "fh_comparedata",
                "start": 101,
                "end": 102
            }
        ],
        "src/fib.c": [
            {
                "name": "allocateFibHeapEl",
                "start": 59,
                "end": 62
            },
            {
                "name": "deallocateFibHeapEl",
                "start": 64,
                "end": 67
            },
            {
                "name": "ceillog2",
                "start": 79,
                "end": 103
            },
            {
                "name": "fh_initheap",
                "start": 108,
                "end": 119
            },
            {
                "name": "fh_destroyheap",
                "start": 121,
                "end": 129
            },
            {
                "name": "fh_makekeyheap",
                "start": 134,
                "end": 145
            },
            {
                "name": "fh_makeheap",
                "start": 147,
                "end": 157
            },
            {
                "name": "fh_setcmp",
                "start": 159,
                "end": 167
            },
            {
                "name": "fh_setneginf",
                "start": 169,
                "end": 177
            },
            {
                "name": "fh_union",
                "start": 179,
                "end": 209
            },
            {
                "name": "fh_deleteheap",
                "start": 211,
                "end": 215
            },
            {
                "name": "fh_insertkey",
                "start": 220,
                "end": 234
            },
            {
                "name": "fh_minkey",
                "start": 236,
                "end": 241
            },
            {
                "name": "fh_replacekey",
                "start": 243,
                "end": 251
            },
            {
                "name": "fh_replacekeydata",
                "start": 253,
                "end": 298
            },
            {
                "name": "fh_insert",
                "start": 308,
                "end": 321
            },
            {
                "name": "fh_min",
                "start": 323,
                "end": 328
            },
            {
                "name": "fh_extractmin",
                "start": 330,
                "end": 347
            },
            {
                "name": "fh_replacedata",
                "start": 349,
                "end": 354
            },
            {
                "name": "fh_delete",
                "start": 356,
                "end": 368
            },
            {
                "name": "fh_extractminel",
                "start": 373,
                "end": 404
            },
            {
                "name": "fh_insertrootlist",
                "start": 406,
                "end": 416
            },
            {
                "name": "fh_removerootlist",
                "start": 418,
                "end": 424
            },
            {
                "name": "fh_consolidate",
                "start": 426,
                "end": 468
            },
            {
                "name": "fh_heaplink",
                "start": 470,
                "end": 480
            },
            {
                "name": "fh_cut",
                "start": 482,
                "end": 489
            },
            {
                "name": "fh_cascading_cut",
                "start": 491,
                "end": 504
            },
            {
                "name": "fhe_newelem",
                "start": 509,
                "end": 519
            },
            {
                "name": "fhe_initelem",
                "start": 521,
                "end": 530
            },
            {
                "name": "fhe_insertafter",
                "start": 532,
                "end": 545
            },
            {
                "name": "fhe_insertbefore",
                "start": 547,
                "end": 550
            },
            {
                "name": "fhe_remove",
                "start": 552,
                "end": 574
            },
            {
                "name": "fh_checkcons",
                "start": 576,
                "end": 594
            },
            {
                "name": "fh_compare",
                "start": 596,
                "end": 603
            },
            {
                "name": "fh_comparedata",
                "start": 605,
                "end": 614
            },
            {
                "name": "fh_insertel",
                "start": 616,
                "end": 628
            }
        ],
        "src/binarySequences.c": [
            {
                "name": "openCnySeqForRead",
                "start": 56,
                "end": 102
            },
            {
                "name": "refillCnySeqReadBuffer",
                "start": 104,
                "end": 126
            },
            {
                "name": "readCnySeqUint8",
                "start": 128,
                "end": 137
            },
            {
                "name": "readCnySeqUint32",
                "start": 139,
                "end": 147
            },
            {
                "name": "advanceCnySeqCurrentRead",
                "start": 149,
                "end": 218
            },
            {
                "name": "resetCnySeqCurrentRead",
                "start": 220,
                "end": 234
            },
            {
                "name": "getCnySeqNucl",
                "start": 236,
                "end": 241
            },
            {
                "name": "importCnyReadSet",
                "start": 243,
                "end": 335
            },
            {
                "name": "cnySeqHostBufferFull",
                "start": 344,
                "end": 380
            },
            {
                "name": "moveCnySeqNucleotides",
                "start": 382,
                "end": 409
            },
            {
                "name": "writeCnySeqNucleotide",
                "start": 411,
                "end": 430
            },
            {
                "name": "cnySeqInsertNucleotideString",
                "start": 432,
                "end": 461
            },
            {
                "name": "openCnySeqForWrite",
                "start": 463,
                "end": 515
            },
            {
                "name": "alignCnySeqToNextByteBoundary",
                "start": 517,
                "end": 527
            },
            {
                "name": "writeCnySeqUint8",
                "start": 529,
                "end": 537
            },
            {
                "name": "writeCnySeqUint32",
                "start": 539,
                "end": 544
            },
            {
                "name": "inputCnySeqFileStart",
                "start": 546,
                "end": 556
            },
            {
                "name": "cnySeqInsertStart",
                "start": 558,
                "end": 579
            },
            {
                "name": "cnySeqInsertSequenceName",
                "start": 581,
                "end": 586
            },
            {
                "name": "cnySeqInsertReferenceMask",
                "start": 588,
                "end": 596
            },
            {
                "name": "cnySeqInsertEnd",
                "start": 598,
                "end": 763
            },
            {
                "name": "closeCnySeqForWrite",
                "start": 765,
                "end": 813
            }
        ],
        "src/fibHeap.c": [
            {
                "name": "newFibHeap",
                "start": 28,
                "end": 35
            },
            {
                "name": "insertNodeIntoHeap",
                "start": 38,
                "end": 42
            },
            {
                "name": "minKeyOfHeap",
                "start": 45,
                "end": 48
            },
            {
                "name": "replaceKeyInHeap",
                "start": 51,
                "end": 55
            },
            {
                "name": "removeNextNodeFromHeap",
                "start": 58,
                "end": 61
            },
            {
                "name": "destroyHeap",
                "start": 64,
                "end": 67
            },
            {
                "name": "replaceValueInHeap",
                "start": 70,
                "end": 73
            },
            {
                "name": "destroyNodeInHeap",
                "start": 76,
                "end": 79
            }
        ],
        "src/scaffold.h": [
            {
                "name": "buildScaffold",
                "start": 27,
                "end": 30
            },
            {
                "name": "createNewConnection",
                "start": 31,
                "end": 35
            },
            {
                "name": "readjustConnection",
                "start": 36,
                "end": 38
            },
            {
                "name": "printScaffold",
                "start": 59,
                "end": 62
            }
        ],
        "src/shortReadPairs.c": [
            {
                "name": "allocateNodeList",
                "start": 56,
                "end": 63
            },
            {
                "name": "deallocateNodeList",
                "start": 65,
                "end": 68
            },
            {
                "name": "recordNode",
                "start": 70,
                "end": 83
            },
            {
                "name": "destroyNodeList",
                "start": 85,
                "end": 100
            },
            {
                "name": "popNodeRecord",
                "start": 102,
                "end": 123
            },
            {
                "name": "resetMiniConnection",
                "start": 125,
                "end": 136
            },
            {
                "name": "setEmptyMiniConnection",
                "start": 138,
                "end": 148
            },
            {
                "name": "readjustMiniConnection",
                "start": 150,
                "end": 176
            },
            {
                "name": "integrateDerivativeDistances",
                "start": 178,
                "end": 245
            },
            {
                "name": "markInterestingNodes",
                "start": 247,
                "end": 306
            },
            {
                "name": "unmarkNode",
                "start": 308,
                "end": 323
            },
            {
                "name": "handicapNode",
                "start": 325,
                "end": 331
            },
            {
                "name": "absorbExtension",
                "start": 333,
                "end": 347
            },
            {
                "name": "getMarkedNodeList",
                "start": 349,
                "end": 352
            },
            {
                "name": "absorbExtensionInScaffold",
                "start": 354,
                "end": 497
            },
            {
                "name": "recenterNode",
                "start": 499,
                "end": 537
            },
            {
                "name": "recenterLocalScaffold",
                "start": 539,
                "end": 572
            },
            {
                "name": "adjustShortReads",
                "start": 574,
                "end": 596
            },
            {
                "name": "adjustLongReads",
                "start": 598,
                "end": 605
            },
            {
                "name": "goesToNode",
                "start": 607,
                "end": 623
            },
            {
                "name": "comesFromNode",
                "start": 625,
                "end": 642
            },
            {
                "name": "reconnectPassageMarker",
                "start": 644,
                "end": 667
            },
            {
                "name": "checkNode",
                "start": 670,
                "end": 696
            },
            {
                "name": "concatenateLongReads",
                "start": 698,
                "end": 727
            },
            {
                "name": "adjustShortReadsByLength",
                "start": 729,
                "end": 749
            },
            {
                "name": "abs_bool",
                "start": 751,
                "end": 754
            },
            {
                "name": "abs_ID",
                "start": 756,
                "end": 759
            },
            {
                "name": "pathIsClear",
                "start": 761,
                "end": 917
            },
            {
                "name": "pushNeighbours",
                "start": 919,
                "end": 1098
            },
            {
                "name": "unmarkInterestingNodes",
                "start": 1100,
                "end": 1113
            },
            {
                "name": "findOppositeNode",
                "start": 1115,
                "end": 1147
            },
            {
                "name": "expandLongNode",
                "start": 1149,
                "end": 1170
            },
            {
                "name": "expandLongNodes",
                "start": 1172,
                "end": 1191
            },
            {
                "name": "cleanMemory",
                "start": 1193,
                "end": 1203
            },
            {
                "name": "exploitShortReadPairs",
                "start": 1205,
                "end": 1243
            }
        ],
        "src/roadMap.c": [
            {
                "name": "getAnnotationCount",
                "start": 54,
                "end": 57
            },
            {
                "name": "getFinish",
                "start": 59,
                "end": 62
            },
            {
                "name": "getAnnotSequenceID",
                "start": 64,
                "end": 67
            },
            {
                "name": "getStart",
                "start": 69,
                "end": 72
            },
            {
                "name": "getPosition",
                "start": 74,
                "end": 77
            },
            {
                "name": "getAnnotationLength",
                "start": 79,
                "end": 85
            },
            {
                "name": "importRoadMapArray",
                "start": 95,
                "end": 187
            },
            {
                "name": "importReferenceRoadMapArray",
                "start": 191,
                "end": 295
            },
            {
                "name": "getRoadMapInArray",
                "start": 297,
                "end": 300
            },
            {
                "name": "setStartID",
                "start": 302,
                "end": 305
            },
            {
                "name": "setFinishID",
                "start": 307,
                "end": 310
            },
            {
                "name": "getStartID",
                "start": 312,
                "end": 315
            },
            {
                "name": "getFinishID",
                "start": 317,
                "end": 320
            },
            {
                "name": "incrementAnnotationCoordinates",
                "start": 322,
                "end": 326
            },
            {
                "name": "getNextAnnotation",
                "start": 328,
                "end": 331
            },
            {
                "name": "getAnnotationInArray",
                "start": 333,
                "end": 336
            },
            {
                "name": "destroyRoadMapArray",
                "start": 338,
                "end": 342
            }
        ],
        "src/concatenatedGraph.c": [
            {
                "name": "isLocallyInitial",
                "start": 30,
                "end": 34
            },
            {
                "name": "concatenateReadStarts",
                "start": 36,
                "end": 80
            },
            {
                "name": "concatenateStringOfNodes",
                "start": 84,
                "end": 186
            },
            {
                "name": "concatenateGraph",
                "start": 191,
                "end": 233
            }
        ],
        "src/preGraphConstruction.c": [
            {
                "name": "getInsertionMarkerPosition",
                "start": 117,
                "end": 123
            },
            {
                "name": "compareInsertionMarkers",
                "start": 125,
                "end": 138
            },
            {
                "name": "orderInsertionMarkers",
                "start": 141,
                "end": 158
            },
            {
                "name": "setInsertionMarkers",
                "start": 161,
                "end": 258
            },
            {
                "name": "countPreNodes",
                "start": 261,
                "end": 332
            },
            {
                "name": "convertInsertionMarkers",
                "start": 334,
                "end": 373
            },
            {
                "name": "convertMarker",
                "start": 375,
                "end": 381
            },
            {
                "name": "createPreNodes",
                "start": 384,
                "end": 647
            },
            {
                "name": "connectPreNodeToTheNext",
                "start": 649,
                "end": 679
            },
            {
                "name": "chooseNextInternalPreNode",
                "start": 681,
                "end": 692
            },
            {
                "name": "connectAnnotation",
                "start": 694,
                "end": 714
            },
            {
                "name": "reConnectAnnotation",
                "start": 716,
                "end": 752
            },
            {
                "name": "createPreMarkers",
                "start": 754,
                "end": 835
            },
            {
                "name": "connectPreNodes",
                "start": 838,
                "end": 931
            },
            {
                "name": "cleanUpMemory",
                "start": 934,
                "end": 942
            },
            {
                "name": "newPreGraph_pg",
                "start": 945,
                "end": 990
            }
        ],
        "src/splayTable.h": [
            {
                "name": "inputSequenceArrayIntoSplayTableAndArchive",
                "start": 28,
                "end": 30
            }
        ],
        "src/graphReConstruction.h": [
            {
                "name": "importPreGraph",
                "start": 24,
                "end": 25
            },
            {
                "name": "importConnectedGraph",
                "start": 27,
                "end": 28
            }
        ],
        "src/run2.c": [
            {
                "name": "printUsage",
                "start": 31,
                "end": 77
            },
            {
                "name": "main",
                "start": 79,
                "end": 712
            }
        ],
        "src/readSet.c": [
            {
                "name": "allocateMask",
                "start": 53,
                "end": 59
            },
            {
                "name": "newMask",
                "start": 61,
                "end": 68
            },
            {
                "name": "isCreateBinary",
                "start": 75,
                "end": 78
            },
            {
                "name": "setCreateBinary",
                "start": 80,
                "end": 83
            },
            {
                "name": "newReadSet",
                "start": 85,
                "end": 89
            },
            {
                "name": "compareRefCoords",
                "start": 107,
                "end": 123
            },
            {
                "name": "newReferenceCoordinateTable",
                "start": 132,
                "end": 137
            },
            {
                "name": "printReferenceCoordinateTableStats",
                "start": 139,
                "end": 155
            },
            {
                "name": "destroyReferenceCoordinateTable",
                "start": 157,
                "end": 167
            },
            {
                "name": "resizeReferenceCoordinateTable",
                "start": 169,
                "end": 174
            },
            {
                "name": "findReferenceCoordinate",
                "start": 176,
                "end": 203
            },
            {
                "name": "addReferenceCoordinate",
                "start": 205,
                "end": 227
            },
            {
                "name": "sortReferenceCoordinateTable",
                "start": 229,
                "end": 231
            },
            {
                "name": "velvetifySequence",
                "start": 237,
                "end": 289
            },
            {
                "name": "reverseComplementSequence",
                "start": 291,
                "end": 324
            },
            {
                "name": "writeFastaSequence",
                "start": 326,
                "end": 332
            },
            {
                "name": "convertSequences",
                "start": 334,
                "end": 340
            },
            {
                "name": "int32",
                "start": 343,
                "end": 350
            },
            {
                "name": "goToEndOfLine",
                "start": 352,
                "end": 359
            },
            {
                "name": "writeSeqName",
                "start": 361,
                "end": 371
            },
            {
                "name": "writeSequence",
                "start": 373,
                "end": 389
            },
            {
                "name": "initFastX",
                "start": 391,
                "end": 404
            },
            {
                "name": "cleanupFastX",
                "start": 406,
                "end": 412
            },
            {
                "name": "readRawFile",
                "start": 417,
                "end": 453
            },
            {
                "name": "readRawGZFile",
                "start": 457,
                "end": 494
            },
            {
                "name": "fillReferenceCoordinateTable",
                "start": 496,
                "end": 543
            },
            {
                "name": "openFastXFile",
                "start": 555,
                "end": 599
            },
            {
                "name": "fileGZOrAuto_read",
                "start": 606,
                "end": 612
            },
            {
                "name": "fileGZOrAuto_close",
                "start": 614,
                "end": 620
            },
            {
                "name": "charToType",
                "start": 622,
                "end": 629
            },
            {
                "name": "readFastXFile",
                "start": 635,
                "end": 669
            },
            {
                "name": "readFastXPair",
                "start": 671,
                "end": 725
            },
            {
                "name": "addMapping",
                "start": 727,
                "end": 760
            },
            {
                "name": "writeMappedSequence",
                "start": 762,
                "end": 781
            },
            {
                "name": "readCigar",
                "start": 783,
                "end": 813
            },
            {
                "name": "readSAMFile",
                "start": 815,
                "end": 943
            },
            {
                "name": "readBAMint32",
                "start": 945,
                "end": 952
            },
            {
                "name": "readBAMFile",
                "start": 954,
                "end": 1142
            },
            {
                "name": "printUsage",
                "start": 1145,
                "end": 1181
            },
            {
                "name": "parseDataAndReadFiles",
                "start": 1185,
                "end": 1371
            },
            {
                "name": "createReadPairingArray",
                "start": 1373,
                "end": 1430
            },
            {
                "name": "pairedCategories",
                "start": 1432,
                "end": 1450
            },
            {
                "name": "isSecondInPair",
                "start": 1452,
                "end": 1455
            },
            {
                "name": "computeSecondInPair",
                "start": 1457,
                "end": 1498
            },
            {
                "name": "detachDubiousReads",
                "start": 1500,
                "end": 1522
            },
            {
                "name": "importReadSet",
                "start": 1524,
                "end": 1625
            },
            {
                "name": "logInstructions",
                "start": 1627,
                "end": 1680
            },
            {
                "name": "destroyReadSet",
                "start": 1682,
                "end": 1721
            },
            {
                "name": "getSequenceLengths",
                "start": 1723,
                "end": 1734
            }
        ],
        "src/scaffold.c": [
            {
                "name": "allocateConnection",
                "start": 161,
                "end": 179
            },
            {
                "name": "deallocateConnection",
                "start": 181,
                "end": 184
            },
            {
                "name": "getConnectionDestination",
                "start": 186,
                "end": 188
            },
            {
                "name": "getNextConnection",
                "start": 190,
                "end": 192
            },
            {
                "name": "getTwinConnection",
                "start": 194,
                "end": 196
            },
            {
                "name": "getConnectionDistance",
                "start": 198,
                "end": 200
            },
            {
                "name": "getConnectionVariance",
                "start": 202,
                "end": 204
            },
            {
                "name": "getConnectionDirectCount",
                "start": 206,
                "end": 208
            },
            {
                "name": "getConnectionPairedCount",
                "start": 210,
                "end": 212
            },
            {
                "name": "getConnection",
                "start": 214,
                "end": 216
            },
            {
                "name": "incrementConnectionDistance",
                "start": 218,
                "end": 220
            },
            {
                "name": "norm",
                "start": 222,
                "end": 225
            },
            {
                "name": "normInt",
                "start": 227,
                "end": 230
            },
            {
                "name": "expectedNumberOfConnections",
                "start": 232,
                "end": 275
            },
            {
                "name": "destroyConnection",
                "start": 277,
                "end": 304
            },
            {
                "name": "testConnection",
                "start": 306,
                "end": 329
            },
            {
                "name": "computeReadToNodeCounts",
                "start": 331,
                "end": 411
            },
            {
                "name": "allocateReadToNodeTables",
                "start": 413,
                "end": 432
            },
            {
                "name": "computePartialReadToNodeMappingShort",
                "start": 434,
                "end": 463
            },
            {
                "name": "computePartialReadToNodeMappingLong",
                "start": 465,
                "end": 510
            },
            {
                "name": "computeReadToNodeMappings",
                "start": 512,
                "end": 550
            },
            {
                "name": "countCoOccurences",
                "start": 552,
                "end": 611
            },
            {
                "name": "measureCoOccurences",
                "start": 613,
                "end": 674
            },
            {
                "name": "compareReadOccurences",
                "start": 676,
                "end": 685
            },
            {
                "name": "estimateLibraryInsertLength",
                "start": 687,
                "end": 720
            },
            {
                "name": "estimateLibraryInsertLengths",
                "start": 722,
                "end": 731
            },
            {
                "name": "estimateMissingInsertLengths",
                "start": 733,
                "end": 754
            },
            {
                "name": "createTwinConnection",
                "start": 756,
                "end": 779
            },
            {
                "name": "createNewConnection",
                "start": 781,
                "end": 812
            },
            {
                "name": "readjustConnection",
                "start": 814,
                "end": 835
            },
            {
                "name": "connectionSingleRotateWithLeft",
                "start": 845,
                "end": 854
            },
            {
                "name": "connectionSingleRotateWithRight",
                "start": 860,
                "end": 869
            },
            {
                "name": "splayConnection",
                "start": 874,
                "end": 922
            },
            {
                "name": "findOrCreateConnection",
                "start": 924,
                "end": 970
            },
            {
                "name": "findConnection",
                "start": 972,
                "end": 993
            },
            {
                "name": "allocateConnectionStack",
                "start": 1018,
                "end": 1038
            },
            {
                "name": "deallocateConnectionStack",
                "start": 1040,
                "end": 1049
            },
            {
                "name": "destroyConnectionStackMemory",
                "start": 1051,
                "end": 1059
            },
            {
                "name": "pushConnectionStack",
                "start": 1061,
                "end": 1069
            },
            {
                "name": "popConnectionStack",
                "start": 1071,
                "end": 1085
            },
            {
                "name": "splayToList",
                "start": 1087,
                "end": 1114
            },
            {
                "name": "setAllConnectionsClean",
                "start": 1116,
                "end": 1148
            },
            {
                "name": "fillNewConnectionInTree",
                "start": 1150,
                "end": 1162
            },
            {
                "name": "readjustConnectionInTree",
                "start": 1164,
                "end": 1183
            },
            {
                "name": "createTwinConnectionInTree",
                "start": 1185,
                "end": 1210
            },
            {
                "name": "createConnection",
                "start": 1212,
                "end": 1254
            },
            {
                "name": "projectFromSingleRead",
                "start": 1256,
                "end": 1347
            },
            {
                "name": "projectFromReadPair",
                "start": 1349,
                "end": 1416
            },
            {
                "name": "projectFromShortRead",
                "start": 1418,
                "end": 1475
            },
            {
                "name": "projectFromLongRead",
                "start": 1477,
                "end": 1520
            },
            {
                "name": "projectFromNode",
                "start": 1522,
                "end": 1563
            },
            {
                "name": "computeNodeToNodeMappings",
                "start": 1565,
                "end": 1650
            },
            {
                "name": "countShortReads",
                "start": 1652,
                "end": 1689
            },
            {
                "name": "removeUnreliableConnections",
                "start": 1691,
                "end": 1714
            },
            {
                "name": "printConnections",
                "start": 1716,
                "end": 1787
            },
            {
                "name": "buildScaffold",
                "start": 1789,
                "end": 1820
            },
            {
                "name": "printScaffold",
                "start": 1823,
                "end": 1855
            },
            {
                "name": "setUnreliableConnectionCutoff",
                "start": 1857,
                "end": 1860
            },
            {
                "name": "cleanScaffoldMemory",
                "start": 1862,
                "end": 1872
            },
            {
                "name": "setPairedExpFraction",
                "start": 1874,
                "end": 1876
            }
        ],
        "src/splay.h": [
            {
                "name": "findOrInsertOccurenceInSplayTree",
                "start": 34,
                "end": 36
            }
        ],
        "src/kmerOccurenceTable.h": [
            {
                "name": "findKmerInKmerOccurenceTable",
                "start": 33,
                "end": 35
            }
        ],
        "src/splayTable.c": [
            {
                "name": "allocateMask",
                "start": 43,
                "end": 49
            },
            {
                "name": "newMask",
                "start": 51,
                "end": 58
            },
            {
                "name": "appendLine",
                "start": 185,
                "end": 188
            },
            {
                "name": "newSplayTable",
                "start": 201,
                "end": 217
            },
            {
                "name": "destroySplayTable",
                "start": 219,
                "end": 229
            },
            {
                "name": "hash_kmer",
                "start": 231,
                "end": 269
            },
            {
                "name": "getNearestHSPIndex",
                "start": 271,
                "end": 291
            },
            {
                "name": "getMostAppropriateHit",
                "start": 293,
                "end": 339
            },
            {
                "name": "doFindOrInsertOccurenceInSplayTree",
                "start": 341,
                "end": 359
            },
            {
                "name": "findOrInsertOccurenceInSplayTable",
                "start": 362,
                "end": 410
            },
            {
                "name": "printAnnotations",
                "start": 412,
                "end": 609
            },
            {
                "name": "computeClearHSPs",
                "start": 611,
                "end": 729
            },
            {
                "name": "inputSequenceIntoSplayTable",
                "start": 731,
                "end": 755
            },
            {
                "name": "inputReferenceIntoSplayTable",
                "start": 757,
                "end": 847
            },
            {
                "name": "countReferenceKmers",
                "start": 849,
                "end": 862
            },
            {
                "name": "scanReferenceSequences",
                "start": 864,
                "end": 907
            },
            {
                "name": "scanBinaryReferenceSequences",
                "start": 909,
                "end": 966
            },
            {
                "name": "inputSequenceArrayIntoSplayTableAndArchive",
                "start": 968,
                "end": 1315
            }
        ],
        "src/graph.c": [
            {
                "name": "allocateArc",
                "start": 98,
                "end": 104
            },
            {
                "name": "deallocateArc",
                "start": 106,
                "end": 109
            },
            {
                "name": "allocateNode",
                "start": 111,
                "end": 117
            },
            {
                "name": "deallocateNode",
                "start": 119,
                "end": 122
            },
            {
                "name": "getTwinNode",
                "start": 125,
                "end": 128
            },
            {
                "name": "insertPassageMarker",
                "start": 131,
                "end": 136
            },
            {
                "name": "getNodeLength",
                "start": 139,
                "end": 142
            },
            {
                "name": "nodeCount",
                "start": 145,
                "end": 148
            },
            {
                "name": "sequenceCount",
                "start": 151,
                "end": 154
            },
            {
                "name": "createArc",
                "start": 158,
                "end": 239
            },
            {
                "name": "createAnalogousArc",
                "start": 241,
                "end": 325
            },
            {
                "name": "getArcBetweenNodes",
                "start": 327,
                "end": 362
            },
            {
                "name": "destroyArc",
                "start": 364,
                "end": 463
            },
            {
                "name": "destroyNode",
                "start": 465,
                "end": 506
            },
            {
                "name": "outDegree",
                "start": 508,
                "end": 518
            },
            {
                "name": "simpleArcCount",
                "start": 520,
                "end": 523
            },
            {
                "name": "arcCount",
                "start": 525,
                "end": 543
            },
            {
                "name": "getNucleotideInDescriptor",
                "start": 545,
                "end": 561
            },
            {
                "name": "getNucleotideInNode",
                "start": 563,
                "end": 565
            },
            {
                "name": "getMarker",
                "start": 567,
                "end": 570
            },
            {
                "name": "setMarker",
                "start": 572,
                "end": 587
            },
            {
                "name": "setNodeStatus",
                "start": 589,
                "end": 593
            },
            {
                "name": "setSingleNodeStatus",
                "start": 595,
                "end": 598
            },
            {
                "name": "getNodeStatus",
                "start": 600,
                "end": 605
            },
            {
                "name": "getNodeID",
                "start": 607,
                "end": 613
            },
            {
                "name": "resetNodeStatus",
                "start": 615,
                "end": 628
            },
            {
                "name": "getNodeInGraph",
                "start": 630,
                "end": 640
            },
            {
                "name": "getArc",
                "start": 642,
                "end": 645
            },
            {
                "name": "getNextArc",
                "start": 647,
                "end": 650
            },
            {
                "name": "getMultiplicity",
                "start": 652,
                "end": 658
            },
            {
                "name": "getOrigin",
                "start": 660,
                "end": 666
            },
            {
                "name": "getDestination",
                "start": 668,
                "end": 674
            },
            {
                "name": "markerCount",
                "start": 676,
                "end": 686
            },
            {
                "name": "appendNodeSequence",
                "start": 688,
                "end": 702
            },
            {
                "name": "writeNucleotideInDescriptor",
                "start": 704,
                "end": 726
            },
            {
                "name": "mergeDescriptors",
                "start": 728,
                "end": 790
            },
            {
                "name": "addBufferToDescriptor",
                "start": 792,
                "end": 848
            },
            {
                "name": "appendDescriptors",
                "start": 850,
                "end": 907
            },
            {
                "name": "catDescriptors",
                "start": 909,
                "end": 918
            },
            {
                "name": "reverseCatDescriptors",
                "start": 920,
                "end": 930
            },
            {
                "name": "directlyAppendDescriptors",
                "start": 932,
                "end": 963
            },
            {
                "name": "copyDownDescriptor",
                "start": 965,
                "end": 992
            },
            {
                "name": "copyDownSequence",
                "start": 994,
                "end": 1028
            },
            {
                "name": "appendSequenceToDescriptor",
                "start": 1030,
                "end": 1070
            },
            {
                "name": "appendSequence",
                "start": 1072,
                "end": 1118
            },
            {
                "name": "setMultiplicity",
                "start": 1120,
                "end": 1124
            },
            {
                "name": "renumberNodes",
                "start": 1128,
                "end": 1215
            },
            {
                "name": "splitNodeDescriptor",
                "start": 1217,
                "end": 1278
            },
            {
                "name": "reduceNode",
                "start": 1280,
                "end": 1289
            },
            {
                "name": "emptyGraph",
                "start": 1292,
                "end": 1302
            },
            {
                "name": "newPositiveDescriptor",
                "start": 1304,
                "end": 1330
            },
            {
                "name": "newNegativeDescriptor",
                "start": 1332,
                "end": 1361
            },
            {
                "name": "newDescriptor",
                "start": 1363,
                "end": 1373
            },
            {
                "name": "newNode",
                "start": 1377,
                "end": 1433
            },
            {
                "name": "allocateNodeSpace",
                "start": 1435,
                "end": 1439
            },
            {
                "name": "getUniqueness",
                "start": 1441,
                "end": 1444
            },
            {
                "name": "setUniqueness",
                "start": 1446,
                "end": 1450
            },
            {
                "name": "emptyNode",
                "start": 1452,
                "end": 1497
            },
            {
                "name": "addEmptyNodeToGraph",
                "start": 1499,
                "end": 1510
            },
            {
                "name": "setVirtualCoverage",
                "start": 1514,
                "end": 1520
            },
            {
                "name": "incrementVirtualCoverage",
                "start": 1522,
                "end": 1528
            },
            {
                "name": "getVirtualCoverage",
                "start": 1530,
                "end": 1533
            },
            {
                "name": "getTotalCoverage",
                "start": 1535,
                "end": 1544
            },
            {
                "name": "setOriginalVirtualCoverage",
                "start": 1546,
                "end": 1552
            },
            {
                "name": "incrementOriginalVirtualCoverage",
                "start": 1554,
                "end": 1560
            },
            {
                "name": "getOriginalVirtualCoverage",
                "start": 1562,
                "end": 1565
            },
            {
                "name": "hasSingleArc",
                "start": 1595,
                "end": 1598
            },
            {
                "name": "activateArcLookupTable",
                "start": 1600,
                "end": 1635
            },
            {
                "name": "deactivateArcLookupTable",
                "start": 1637,
                "end": 1641
            },
            {
                "name": "exportNode",
                "start": 1643,
                "end": 1706
            },
            {
                "name": "exportArc",
                "start": 1708,
                "end": 1732
            },
            {
                "name": "mergeArcLists",
                "start": 1735,
                "end": 1778
            },
            {
                "name": "arcMergeSort",
                "start": 1780,
                "end": 1817
            },
            {
                "name": "sortNodeArcs",
                "start": 1819,
                "end": 1834
            },
            {
                "name": "mergeGapMarkerLists",
                "start": 1837,
                "end": 1874
            },
            {
                "name": "gapMergeSort",
                "start": 1876,
                "end": 1909
            },
            {
                "name": "sortNodeGapMarkers",
                "start": 1911,
                "end": 1930
            },
            {
                "name": "sortGapMarkers",
                "start": 1932,
                "end": 1945
            },
            {
                "name": "exportGraph",
                "start": 1947,
                "end": 2026
            },
            {
                "name": "importGraph",
                "start": 2028,
                "end": 2261
            },
            {
                "name": "readPreGraphFile",
                "start": 2263,
                "end": 2419
            },
            {
                "name": "readConnectedGraphFile",
                "start": 2421,
                "end": 2616
            },
            {
                "name": "DOTNode",
                "start": 2620,
                "end": 2659
            },
            {
                "name": "expandNode",
                "start": 2661,
                "end": 2689
            },
            {
                "name": "expandNodeFragment",
                "start": 2691,
                "end": 2777
            },
            {
                "name": "readStartsAreActivated",
                "start": 2779,
                "end": 2782
            },
            {
                "name": "activateReadStarts",
                "start": 2784,
                "end": 2790
            },
            {
                "name": "deactivateReadStarts",
                "start": 2792,
                "end": 2799
            },
            {
                "name": "findIDnumInArray",
                "start": 2801,
                "end": 2824
            },
            {
                "name": "compareShortReadMarkers",
                "start": 2826,
                "end": 2836
            },
            {
                "name": "compareIDnums",
                "start": 2838,
                "end": 2848
            },
            {
                "name": "incrementReadStartCount",
                "start": 2850,
                "end": 2853
            },
            {
                "name": "createNodeReadStartArrays",
                "start": 2855,
                "end": 2872
            },
            {
                "name": "orderNodeReadStartArrays",
                "start": 2874,
                "end": 2887
            },
            {
                "name": "addReadStart",
                "start": 2889,
                "end": 2902
            },
            {
                "name": "blurLastShortReadMarker",
                "start": 2904,
                "end": 2916
            },
            {
                "name": "commonNodeReads",
                "start": 2918,
                "end": 3017
            },
            {
                "name": "extractFrontOfNodeReads",
                "start": 3019,
                "end": 3153
            },
            {
                "name": "extractBackOfNodeReads",
                "start": 3155,
                "end": 3283
            },
            {
                "name": "spreadReadIDs",
                "start": 3285,
                "end": 3407
            },
            {
                "name": "min",
                "start": 3409,
                "end": 3412
            },
            {
                "name": "min_short",
                "start": 3414,
                "end": 3417
            },
            {
                "name": "injectShortReads",
                "start": 3419,
                "end": 3555
            },
            {
                "name": "mergeNodeReads",
                "start": 3557,
                "end": 3576
            },
            {
                "name": "foldSymmetricalNodeReads",
                "start": 3578,
                "end": 3702
            },
            {
                "name": "shareReadStarts",
                "start": 3704,
                "end": 3723
            },
            {
                "name": "getNodeToReadMappings",
                "start": 3725,
                "end": 3728
            },
            {
                "name": "getShortReadMarkerID",
                "start": 3730,
                "end": 3733
            },
            {
                "name": "getShortReadMarkerOffset",
                "start": 3735,
                "end": 3738
            },
            {
                "name": "setShortReadMarkerOffset",
                "start": 3740,
                "end": 3744
            },
            {
                "name": "getNodeReadCounts",
                "start": 3746,
                "end": 3749
            },
            {
                "name": "getWordLength",
                "start": 3751,
                "end": 3754
            },
            {
                "name": "getNodeReads",
                "start": 3756,
                "end": 3760
            },
            {
                "name": "getNodeReadCount",
                "start": 3762,
                "end": 3766
            },
            {
                "name": "getShortReadMarkerPosition",
                "start": 3768,
                "end": 3771
            },
            {
                "name": "setShortReadMarkerPosition",
                "start": 3773,
                "end": 3780
            },
            {
                "name": "getShortReadMarkerAtIndex",
                "start": 3782,
                "end": 3786
            },
            {
                "name": "destroyGraph",
                "start": 3788,
                "end": 3809
            },
            {
                "name": "setInsertLengths",
                "start": 3811,
                "end": 3817
            },
            {
                "name": "getInsertLength",
                "start": 3819,
                "end": 3822
            },
            {
                "name": "getInsertLength_var",
                "start": 3824,
                "end": 3827
            },
            {
                "name": "activateGapMarkers",
                "start": 3829,
                "end": 3834
            },
            {
                "name": "deactivateGapMarkers",
                "start": 3836,
                "end": 3842
            },
            {
                "name": "allocateGapMarker",
                "start": 3844,
                "end": 3847
            },
            {
                "name": "appendGap",
                "start": 3849,
                "end": 3872
            },
            {
                "name": "appendNodeGaps",
                "start": 3874,
                "end": 3924
            },
            {
                "name": "getGap",
                "start": 3926,
                "end": 3937
            },
            {
                "name": "getNextGap",
                "start": 3939,
                "end": 3942
            },
            {
                "name": "getGapStart",
                "start": 3944,
                "end": 3947
            },
            {
                "name": "getGapFinish",
                "start": 3949,
                "end": 3952
            },
            {
                "name": "reallocateNodeDescriptor",
                "start": 3954,
                "end": 3979
            },
            {
                "name": "doubleStrandedGraph",
                "start": 3981,
                "end": 3983
            }
        ],
        "src/run.c": [
            {
                "name": "printUsage",
                "start": 33,
                "end": 94
            },
            {
                "name": "main",
                "start": 96,
                "end": 318
            }
        ],
        "src/passageMarker.c": [
            {
                "name": "allocatePassageMarker",
                "start": 55,
                "end": 62
            },
            {
                "name": "deallocatePassageMarker",
                "start": 64,
                "end": 67
            },
            {
                "name": "allocatePassageMarkerList",
                "start": 69,
                "end": 77
            },
            {
                "name": "deallocatePassageMarkerList",
                "start": 79,
                "end": 82
            },
            {
                "name": "setNextInSequence",
                "start": 84,
                "end": 90
            },
            {
                "name": "extractPassageMarker",
                "start": 92,
                "end": 117
            },
            {
                "name": "destroyPassageMarker",
                "start": 119,
                "end": 145
            },
            {
                "name": "destroyAllPassageMarkers",
                "start": 147,
                "end": 153
            },
            {
                "name": "setPreviousInSequence",
                "start": 156,
                "end": 164
            },
            {
                "name": "disconnectNextPassageMarker",
                "start": 166,
                "end": 175
            },
            {
                "name": "deleteNextPassageMarker",
                "start": 177,
                "end": 186
            },
            {
                "name": "getNextInNode",
                "start": 188,
                "end": 194
            },
            {
                "name": "setNextInNode",
                "start": 196,
                "end": 226
            },
            {
                "name": "setTopOfTheNode",
                "start": 228,
                "end": 234
            },
            {
                "name": "getNextInSequence",
                "start": 236,
                "end": 248
            },
            {
                "name": "getPreviousInSequence",
                "start": 250,
                "end": 262
            },
            {
                "name": "connectPassageMarkers",
                "start": 264,
                "end": 273
            },
            {
                "name": "readPassageMarker",
                "start": 275,
                "end": 302
            },
            {
                "name": "addPassageMarker",
                "start": 304,
                "end": 335
            },
            {
                "name": "copyPassageMarkerList",
                "start": 337,
                "end": 354
            },
            {
                "name": "incrementFinishOffset",
                "start": 356,
                "end": 359
            },
            {
                "name": "incrementStartOffset",
                "start": 361,
                "end": 364
            },
            {
                "name": "getFinishOffset",
                "start": 366,
                "end": 369
            },
            {
                "name": "setFinishOffset",
                "start": 371,
                "end": 374
            },
            {
                "name": "getStartOffset",
                "start": 376,
                "end": 379
            },
            {
                "name": "setStartOffset",
                "start": 381,
                "end": 384
            },
            {
                "name": "transposePassageMarker",
                "start": 386,
                "end": 397
            },
            {
                "name": "getTwinMarker",
                "start": 399,
                "end": 402
            },
            {
                "name": "getPassageMarkerSequenceID",
                "start": 404,
                "end": 407
            },
            {
                "name": "getAbsolutePassMarkerSeqID",
                "start": 409,
                "end": 417
            },
            {
                "name": "getNode",
                "start": 419,
                "end": 425
            },
            {
                "name": "concatenatePassageMarkers",
                "start": 427,
                "end": 442
            },
            {
                "name": "getPassageMarkerStatus",
                "start": 444,
                "end": 447
            },
            {
                "name": "setPassageMarkerStatus",
                "start": 449,
                "end": 455
            },
            {
                "name": "isDestinationToMarker",
                "start": 457,
                "end": 465
            },
            {
                "name": "isTerminal",
                "start": 467,
                "end": 476
            },
            {
                "name": "isInitial",
                "start": 478,
                "end": 495
            },
            {
                "name": "getPassageMarkerStart",
                "start": 497,
                "end": 500
            },
            {
                "name": "setPassageMarkerStart",
                "start": 502,
                "end": 505
            },
            {
                "name": "getPassageMarkerFinish",
                "start": 507,
                "end": 516
            },
            {
                "name": "setPassageMarkerFinish",
                "start": 518,
                "end": 527
            },
            {
                "name": "getPassageMarkerLength",
                "start": 529,
                "end": 543
            },
            {
                "name": "passageMarkerDirection",
                "start": 545,
                "end": 551
            },
            {
                "name": "addUncertainPassageMarker",
                "start": 553,
                "end": 585
            },
            {
                "name": "newPassageMarkerList",
                "start": 587,
                "end": 594
            },
            {
                "name": "newPassageMarker",
                "start": 596,
                "end": 648
            },
            {
                "name": "exportMarker",
                "start": 650,
                "end": 677
            }
        ],
        "src/splay.c": [
            {
                "name": "allocateSplayNode",
                "start": 61,
                "end": 80
            },
            {
                "name": "destroyAllSplayTrees",
                "start": 82,
                "end": 90
            },
            {
                "name": "SingleRotateWithLeft",
                "start": 96,
                "end": 105
            },
            {
                "name": "SingleRotateWithRight",
                "start": 111,
                "end": 120
            },
            {
                "name": "Splay",
                "start": 125,
                "end": 169
            },
            {
                "name": "findInTree",
                "start": 171,
                "end": 175
            },
            {
                "name": "insertIntoTree",
                "start": 177,
                "end": 205
            },
            {
                "name": "findOrInsertOccurenceInSplayTree",
                "start": 207,
                "end": 259
            }
        ],
        "src/dfibHeap.c": [
            {
                "name": "newDFibHeap",
                "start": 31,
                "end": 38
            },
            {
                "name": "insertNodeIntoDHeap",
                "start": 41,
                "end": 48
            },
            {
                "name": "replaceKeyInDHeap",
                "start": 51,
                "end": 57
            },
            {
                "name": "removeNextNodeFromDHeap",
                "start": 60,
                "end": 66
            },
            {
                "name": "destroyDHeap",
                "start": 69,
                "end": 72
            },
            {
                "name": "replaceValueInDHeap",
                "start": 75,
                "end": 78
            },
            {
                "name": "destroyNodeInDHeap",
                "start": 81,
                "end": 84
            },
            {
                "name": "getKey",
                "start": 86,
                "end": 89
            }
        ],
        "src/allocArray.c": [
            {
                "name": "initAllocArray",
                "start": 52,
                "end": 71
            },
            {
                "name": "newAllocArray",
                "start": 73,
                "end": 85
            },
            {
                "name": "destroyAllocArrayChunks",
                "start": 87,
                "end": 94
            },
            {
                "name": "destroyAllocArray",
                "start": 96,
                "end": 110
            },
            {
                "name": "allocArrayAllocate",
                "start": 112,
                "end": 155
            },
            {
                "name": "allocArrayGetElement",
                "start": 157,
                "end": 168
            },
            {
                "name": "allocArrayFree",
                "start": 170,
                "end": 182
            }
        ],
        "src/readCoherentGraph.c": [
            {
                "name": "allocateRBConnection",
                "start": 63,
                "end": 70
            },
            {
                "name": "deallocateRBConnection",
                "start": 72,
                "end": 75
            },
            {
                "name": "isUniqueSolexa",
                "start": 77,
                "end": 97
            },
            {
                "name": "identifyUniqueNodes",
                "start": 99,
                "end": 120
            },
            {
                "name": "uniqueNodesConnect",
                "start": 122,
                "end": 273
            },
            {
                "name": "goesToNode",
                "start": 275,
                "end": 294
            },
            {
                "name": "updateMembers",
                "start": 296,
                "end": 334
            },
            {
                "name": "admitGroupies",
                "start": 336,
                "end": 349
            },
            {
                "name": "adjustShortReads",
                "start": 351,
                "end": 371
            },
            {
                "name": "bypass",
                "start": 373,
                "end": 448
            },
            {
                "name": "trimLongReadTips",
                "start": 450,
                "end": 491
            },
            {
                "name": "readCoherentGraph",
                "start": 493,
                "end": 543
            },
            {
                "name": "setMultiplicityCutoff",
                "start": 545,
                "end": 557
            }
        ],
        "src/graphReConstruction.c": [
            {
                "name": "allocateSmallNodeList",
                "start": 164,
                "end": 183
            },
            {
                "name": "deallocateSmallNodeList",
                "start": 185,
                "end": 194
            },
            {
                "name": "destroySmallNodeListMemmory",
                "start": 196,
                "end": 207
            },
            {
                "name": "memorizeNode",
                "start": 209,
                "end": 218
            },
            {
                "name": "isNodeMemorized",
                "start": 220,
                "end": 234
            },
            {
                "name": "unMemorizeNodes",
                "start": 236,
                "end": 248
            },
            {
                "name": "countMappings",
                "start": 263,
                "end": 281
            },
            {
                "name": "recordReferenceMappings",
                "start": 283,
                "end": 319
            },
            {
                "name": "compareRefMaps",
                "start": 321,
                "end": 337
            },
            {
                "name": "computeReferenceMappings",
                "start": 339,
                "end": 360
            },
            {
                "name": "findReferenceMapping",
                "start": 362,
                "end": 401
            },
            {
                "name": "compareNodeMasks",
                "start": 415,
                "end": 431
            },
            {
                "name": "computeNodeMasks",
                "start": 433,
                "end": 460
            },
            {
                "name": "referenceGraphKmers",
                "start": 466,
                "end": 628
            },
            {
                "name": "ghostThreadSequenceThroughGraph",
                "start": 630,
                "end": 799
            },
            {
                "name": "threadSequenceThroughGraph",
                "start": 801,
                "end": 1064
            },
            {
                "name": "fillUpGraph",
                "start": 1066,
                "end": 1190
            },
            {
                "name": "importPreGraph",
                "start": 1192,
                "end": 1220
            },
            {
                "name": "addReadsToGraph",
                "start": 1222,
                "end": 1358
            },
            {
                "name": "fillUpConnectedGraph",
                "start": 1360,
                "end": 1448
            },
            {
                "name": "importConnectedGraph",
                "start": 1450,
                "end": 1472
            }
        ],
        "src/preGraph.c": [
            {
                "name": "allocatePreArc_pg",
                "start": 85,
                "end": 95
            },
            {
                "name": "deallocatePreArc_pg",
                "start": 97,
                "end": 104
            },
            {
                "name": "getPreNodeLength_pg",
                "start": 107,
                "end": 115
            },
            {
                "name": "preNodeCount_pg",
                "start": 118,
                "end": 121
            },
            {
                "name": "sequenceCount_pg",
                "start": 124,
                "end": 127
            },
            {
                "name": "getPreArcBetweenPreNodes_pg",
                "start": 129,
                "end": 149
            },
            {
                "name": "addPreArcToPreNode_pg",
                "start": 151,
                "end": 181
            },
            {
                "name": "createPreArc_pg",
                "start": 185,
                "end": 223
            },
            {
                "name": "createAnalogousPreArc_pg",
                "start": 225,
                "end": 257
            },
            {
                "name": "setNextPreArc_pg",
                "start": 259,
                "end": 269
            },
            {
                "name": "removePreArcFromList_pg",
                "start": 271,
                "end": 300
            },
            {
                "name": "destroyPreArc_pg",
                "start": 302,
                "end": 322
            },
            {
                "name": "destroyPreNode_pg",
                "start": 324,
                "end": 366
            },
            {
                "name": "destroyPreGraph_pg",
                "start": 368,
                "end": 398
            },
            {
                "name": "getNucleotideInDescriptor_pg",
                "start": 400,
                "end": 416
            },
            {
                "name": "getPreNodeInPreGraph_pg",
                "start": 418,
                "end": 431
            },
            {
                "name": "getPreArc_pg",
                "start": 433,
                "end": 447
            },
            {
                "name": "getNextPreArc_pg",
                "start": 449,
                "end": 460
            },
            {
                "name": "getMultiplicity_pg",
                "start": 462,
                "end": 468
            },
            {
                "name": "getOtherEnd_pg",
                "start": 470,
                "end": 479
            },
            {
                "name": "getDestination_pg",
                "start": 481,
                "end": 494
            },
            {
                "name": "writeNucleotideInDescriptor_pg",
                "start": 496,
                "end": 518
            },
            {
                "name": "mergeDescriptors_pg",
                "start": 520,
                "end": 633
            },
            {
                "name": "mergeDescriptorsH2H_pg",
                "start": 635,
                "end": 758
            },
            {
                "name": "mergeDescriptorsF2F_pg",
                "start": 760,
                "end": 888
            },
            {
                "name": "setMultiplicity_pg",
                "start": 890,
                "end": 893
            },
            {
                "name": "updatePreArcData_pg",
                "start": 895,
                "end": 905
            },
            {
                "name": "renumberPreNodes_pg",
                "start": 909,
                "end": 976
            },
            {
                "name": "emptyPreGraph_pg",
                "start": 979,
                "end": 996
            },
            {
                "name": "newDescriptor_pg",
                "start": 998,
                "end": 1055
            },
            {
                "name": "allocatePreNodeSpace_pg",
                "start": 1057,
                "end": 1061
            },
            {
                "name": "allocatePreMarkerCountSpace_pg",
                "start": 1063,
                "end": 1067
            },
            {
                "name": "incrementNodeReferenceMarkerCount_pg",
                "start": 1069,
                "end": 1074
            },
            {
                "name": "allocatePreMarkerSpace_pg",
                "start": 1076,
                "end": 1089
            },
            {
                "name": "addPreMarker_pg",
                "start": 1091,
                "end": 1116
            },
            {
                "name": "addPreNodeToPreGraph_pg",
                "start": 1117,
                "end": 1131
            },
            {
                "name": "exportPreNode_pg",
                "start": 1133,
                "end": 1170
            },
            {
                "name": "exportPreMarker",
                "start": 1172,
                "end": 1174
            },
            {
                "name": "exportPreReference_pg",
                "start": 1176,
                "end": 1192
            },
            {
                "name": "exportPreGraph_pg",
                "start": 1194,
                "end": 1228
            },
            {
                "name": "getWordLength_pg",
                "start": 1230,
                "end": 1233
            },
            {
                "name": "hasSinglePreArc_pg",
                "start": 1235,
                "end": 1253
            },
            {
                "name": "simplePreArcCount_pg",
                "start": 1255,
                "end": 1277
            },
            {
                "name": "isLoop_pg",
                "start": 1279,
                "end": 1285
            },
            {
                "name": "setPreNodeDescriptor_pg",
                "start": 1287,
                "end": 1297
            },
            {
                "name": "appendPositiveDescriptor_pg",
                "start": 1299,
                "end": 1338
            },
            {
                "name": "appendNegativeDescriptor_pg",
                "start": 1340,
                "end": 1380
            },
            {
                "name": "appendDescriptors_pg",
                "start": 1382,
                "end": 1387
            },
            {
                "name": "referenceMarkersAreActivated_pg",
                "start": 1389,
                "end": 1391
            },
            {
                "name": "copyPreMarker",
                "start": 1393,
                "end": 1416
            },
            {
                "name": "reallocOrExitReferenceMarkers",
                "start": 1418,
                "end": 1433
            },
            {
                "name": "concatenateReferenceMarkers_H2T_pg",
                "start": 1435,
                "end": 1499
            },
            {
                "name": "concatenateReferenceMarkers_H2H_pg",
                "start": 1501,
                "end": 1565
            },
            {
                "name": "concatenateReferenceMarkers_T2T_pg",
                "start": 1567,
                "end": 1632
            },
            {
                "name": "concatenateReferenceMarkers_T2H_pg",
                "start": 1634,
                "end": 1697
            },
            {
                "name": "concatenateReferenceMarkers_pg",
                "start": 1699,
                "end": 1711
            },
            {
                "name": "hasPreMarkers",
                "start": 1713,
                "end": 1717
            }
        ]
    }
}