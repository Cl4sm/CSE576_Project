{
    "raxml-8.1.1": {
        "axml.h": [
            {
                "name": "Tree2StringClassify",
                "start": 1220,
                "end": 1221
            },
            {
                "name": "Tree2String",
                "start": 1303,
                "end": 1304
            },
            {
                "name": "bitVectorInitravSpecial",
                "start": 1416,
                "end": 1417
            }
        ],
        "multiple.c": [
            {
                "name": "catToGamma",
                "start": 72,
                "end": 85
            },
            {
                "name": "gammaToCat",
                "start": 87,
                "end": 98
            },
            {
                "name": "singleBootstrap",
                "start": 101,
                "end": 139
            },
            {
                "name": "compareTopolRell",
                "start": 150,
                "end": 163
            },
            {
                "name": "fixModelIndices",
                "start": 166,
                "end": 239
            },
            {
                "name": "reductionCleanup",
                "start": 241,
                "end": 258
            },
            {
                "name": "computeNextReplicate",
                "start": 385,
                "end": 503
            },
            {
                "name": "allocParams",
                "start": 507,
                "end": 527
            },
            {
                "name": "rax_freeParams",
                "start": 529,
                "end": 543
            },
            {
                "name": "copyParams",
                "start": 545,
                "end": 570
            },
            {
                "name": "doAllInOne",
                "start": 657,
                "end": 1322
            },
            {
                "name": "doBootstrap",
                "start": 1331,
                "end": 1500
            },
            {
                "name": "printMesquite",
                "start": 1504,
                "end": 1538
            },
            {
                "name": "doInference",
                "start": 1543,
                "end": 1994
            }
        ],
        "legacyCode.c": [
            {
                "name": "mygetopt",
                "start": 7,
                "end": 78
            },
            {
                "name": "mre",
                "start": 89,
                "end": 180
            },
            {
                "name": "printBip",
                "start": 188,
                "end": 257
            },
            {
                "name": "computeConsensusOnly",
                "start": 259,
                "end": 450
            },
            {
                "name": "setupMask",
                "start": 457,
                "end": 481
            },
            {
                "name": "newviewBipartitions",
                "start": 484,
                "end": 548
            },
            {
                "name": "bitVectorTraversePlausibility",
                "start": 555,
                "end": 623
            },
            {
                "name": "plausibilityChecker",
                "start": 629,
                "end": 915
            }
        ],
        "classify.c": [
            {
                "name": "getBranch",
                "start": 60,
                "end": 99
            },
            {
                "name": "getBranchPerPartition",
                "start": 101,
                "end": 134
            },
            {
                "name": "Tree2StringClassifyRec",
                "start": 137,
                "end": 269
            },
            {
                "name": "Tree2StringClassify",
                "start": 274,
                "end": 330
            },
            {
                "name": "markTips",
                "start": 335,
                "end": 351
            },
            {
                "name": "containsRoot",
                "start": 354,
                "end": 382
            },
            {
                "name": "findRootDirection",
                "start": 384,
                "end": 395
            },
            {
                "name": "setPartitionMask",
                "start": 398,
                "end": 415
            },
            {
                "name": "resetPartitionMask",
                "start": 417,
                "end": 424
            },
            {
                "name": "allSmoothedEPA",
                "start": 428,
                "end": 442
            },
            {
                "name": "updateEPA",
                "start": 444,
                "end": 482
            },
            {
                "name": "localSmoothEPA",
                "start": 484,
                "end": 518
            },
            {
                "name": "testInsertThorough",
                "start": 521,
                "end": 679
            },
            {
                "name": "testInsertFast",
                "start": 683,
                "end": 747
            },
            {
                "name": "addTraverseRob",
                "start": 752,
                "end": 770
            },
            {
                "name": "setupBranchMetaInfo",
                "start": 1353,
                "end": 1431
            },
            {
                "name": "setupJointFormat",
                "start": 1435,
                "end": 1454
            },
            {
                "name": "setupBranchInfo",
                "start": 1461,
                "end": 1504
            },
            {
                "name": "infoCompare",
                "start": 1509,
                "end": 1522
            },
            {
                "name": "consolidateInfoMLHeuristics",
                "start": 1524,
                "end": 1555
            },
            {
                "name": "consolidateInfo",
                "start": 1561,
                "end": 1586
            },
            {
                "name": "analyzeReads",
                "start": 1594,
                "end": 1642
            },
            {
                "name": "classifyML",
                "start": 1645,
                "end": 2111
            }
        ],
        "axml.c": [
            {
                "name": "FABS",
                "start": 86,
                "end": 95
            },
            {
                "name": "getNumberOfTrees",
                "start": 101,
                "end": 125
            },
            {
                "name": "printBoth",
                "start": 127,
                "end": 137
            },
            {
                "name": "printBothOpen",
                "start": 139,
                "end": 158
            },
            {
                "name": "printBothOpenMPI",
                "start": 160,
                "end": 179
            },
            {
                "name": "getSmoothFreqs",
                "start": 182,
                "end": 187
            },
            {
                "name": "getBitVector",
                "start": 189,
                "end": 194
            },
            {
                "name": "getStates",
                "start": 197,
                "end": 202
            },
            {
                "name": "getUndetermined",
                "start": 204,
                "end": 209
            },
            {
                "name": "getInverseMeaning",
                "start": 213,
                "end": 218
            },
            {
                "name": "getPartitionLengths",
                "start": 220,
                "end": 244
            },
            {
                "name": "isCat",
                "start": 248,
                "end": 254
            },
            {
                "name": "isGamma",
                "start": 256,
                "end": 263
            },
            {
                "name": "stateAnalyzer",
                "start": 266,
                "end": 329
            },
            {
                "name": "setRateHetAndDataIncrement",
                "start": 334,
                "end": 394
            },
            {
                "name": "gettime",
                "start": 397,
                "end": 410
            },
            {
                "name": "randum",
                "start": 414,
                "end": 437
            },
            {
                "name": "filexists",
                "start": 439,
                "end": 454
            },
            {
                "name": "myfopen",
                "start": 457,
                "end": 488
            },
            {
                "name": "isTip",
                "start": 500,
                "end": 508
            },
            {
                "name": "getxnode",
                "start": 517,
                "end": 528
            },
            {
                "name": "hookup",
                "start": 534,
                "end": 543
            },
            {
                "name": "hookupDefault",
                "start": 545,
                "end": 554
            },
            {
                "name": "rax_getline_insptr_valid",
                "start": 559,
                "end": 574
            },
            {
                "name": "rax_getline",
                "start": 576,
                "end": 631
            },
            {
                "name": "getnums",
                "start": 634,
                "end": 758
            },
            {
                "name": "whitechar",
                "start": 764,
                "end": 767
            },
            {
                "name": "uppercase",
                "start": 770,
                "end": 778
            },
            {
                "name": "getyspace",
                "start": 783,
                "end": 804
            },
            {
                "name": "KISS32",
                "start": 807,
                "end": 828
            },
            {
                "name": "setupTree",
                "start": 830,
                "end": 1019
            },
            {
                "name": "checkTaxonName",
                "start": 1022,
                "end": 1061
            },
            {
                "name": "printParsingErrorContext",
                "start": 1063,
                "end": 1088
            },
            {
                "name": "getdata",
                "start": 1090,
                "end": 1399
            },
            {
                "name": "parseFasta",
                "start": 1401,
                "end": 1717
            },
            {
                "name": "inputweights",
                "start": 1721,
                "end": 1755
            },
            {
                "name": "getinput",
                "start": 1759,
                "end": 1952
            },
            {
                "name": "buildStates",
                "start": 1956,
                "end": 2148
            },
            {
                "name": "adaptRdataToSecondary",
                "start": 2152,
                "end": 2205
            },
            {
                "name": "sitesort",
                "start": 2207,
                "end": 2278
            },
            {
                "name": "sitecombcrunch",
                "start": 2281,
                "end": 2417
            },
            {
                "name": "makeweights",
                "start": 2420,
                "end": 2431
            },
            {
                "name": "makevalues",
                "start": 2436,
                "end": 2533
            },
            {
                "name": "sequenceSimilarity",
                "start": 2542,
                "end": 2551
            },
            {
                "name": "checkSequences",
                "start": 2553,
                "end": 2972
            },
            {
                "name": "generateBS",
                "start": 2980,
                "end": 3032
            },
            {
                "name": "splitMultiGene",
                "start": 3038,
                "end": 3103
            },
            {
                "name": "countTaxaInTopology",
                "start": 3106,
                "end": 3142
            },
            {
                "name": "allocPartitions",
                "start": 3150,
                "end": 3240
            },
            {
                "name": "allocNodex",
                "start": 3248,
                "end": 3353
            },
            {
                "name": "initAdef",
                "start": 3358,
                "end": 3418
            },
            {
                "name": "modelExists",
                "start": 3423,
                "end": 4398
            },
            {
                "name": "checkOutgroups",
                "start": 4403,
                "end": 4429
            },
            {
                "name": "parseOutgroups",
                "start": 4431,
                "end": 4481
            },
            {
                "name": "printVersionInfo",
                "start": 4487,
                "end": 4516
            },
            {
                "name": "printMinusFUsage",
                "start": 4518,
                "end": 4647
            },
            {
                "name": "printREADME",
                "start": 4650,
                "end": 5065
            },
            {
                "name": "analyzeRunId",
                "start": 5070,
                "end": 5098
            },
            {
                "name": "get_args",
                "start": 5100,
                "end": 6476
            },
            {
                "name": "errorExit",
                "start": 6481,
                "end": 6490
            },
            {
                "name": "makeFileNames",
                "start": 6494,
                "end": 6594
            },
            {
                "name": "printBaseFrequencies",
                "start": 6610,
                "end": 6652
            },
            {
                "name": "printModelAndProgramInfo",
                "start": 6654,
                "end": 6951
            },
            {
                "name": "printResult",
                "start": 6955,
                "end": 7032
            },
            {
                "name": "printBootstrapResult",
                "start": 7034,
                "end": 7073
            },
            {
                "name": "printBipartitionResult",
                "start": 7077,
                "end": 7102
            },
            {
                "name": "printLog",
                "start": 7106,
                "end": 7183
            },
            {
                "name": "printStartingTree",
                "start": 7187,
                "end": 7216
            },
            {
                "name": "writeInfoFile",
                "start": 7218,
                "end": 7305
            },
            {
                "name": "printFreqs",
                "start": 7307,
                "end": 7313
            },
            {
                "name": "printRatesDNA_BIN",
                "start": 7315,
                "end": 7330
            },
            {
                "name": "printRatesRest",
                "start": 7332,
                "end": 7344
            },
            {
                "name": "getDataTypeString",
                "start": 7347,
                "end": 7381
            },
            {
                "name": "printModelParams",
                "start": 7385,
                "end": 7517
            },
            {
                "name": "finalizeInfoFile",
                "start": 7519,
                "end": 7852
            },
            {
                "name": "setupPresenceMask",
                "start": 7856,
                "end": 7885
            },
            {
                "name": "elwCompare",
                "start": 9469,
                "end": 9482
            },
            {
                "name": "elwCompareLikelihood",
                "start": 9484,
                "end": 9497
            },
            {
                "name": "computeLHTest",
                "start": 9499,
                "end": 9585
            },
            {
                "name": "computePerSiteLLs",
                "start": 9587,
                "end": 9660
            },
            {
                "name": "cumulativeTreeLength",
                "start": 9663,
                "end": 9707
            },
            {
                "name": "computeAllLHs",
                "start": 9709,
                "end": 9812
            },
            {
                "name": "computeELW",
                "start": 9817,
                "end": 10081
            },
            {
                "name": "computeDistances",
                "start": 10085,
                "end": 10156
            },
            {
                "name": "morphologicalCalibration",
                "start": 10160,
                "end": 10228
            },
            {
                "name": "sortLex",
                "start": 10233,
                "end": 10249
            },
            {
                "name": "extractTaxaFromTopology",
                "start": 10252,
                "end": 10354
            },
            {
                "name": "myfwrite",
                "start": 10357,
                "end": 10363
            },
            {
                "name": "writeLG4",
                "start": 10366,
                "end": 10383
            },
            {
                "name": "writeBinaryModel",
                "start": 10386,
                "end": 10454
            },
            {
                "name": "myfread",
                "start": 10456,
                "end": 10464
            },
            {
                "name": "readLG4",
                "start": 10467,
                "end": 10484
            },
            {
                "name": "readBinaryModel",
                "start": 10486,
                "end": 10597
            },
            {
                "name": "iterated_bitcount",
                "start": 10602,
                "end": 10614
            },
            {
                "name": "compute_bits_in_16bits",
                "start": 10618,
                "end": 10628
            },
            {
                "name": "precomputed16_bitcount",
                "start": 10630,
                "end": 10636
            },
            {
                "name": "parseError",
                "start": 10643,
                "end": 10647
            },
            {
                "name": "groupingParser",
                "start": 10653,
                "end": 10756
            },
            {
                "name": "quartetLikelihood",
                "start": 10759,
                "end": 10821
            },
            {
                "name": "computeAllThreeQuartets",
                "start": 10896,
                "end": 10965
            },
            {
                "name": "computeQuartets",
                "start": 10976,
                "end": 11228
            },
            {
                "name": "thoroughTreeOptimization",
                "start": 11230,
                "end": 11268
            },
            {
                "name": "evaluateSD",
                "start": 11270,
                "end": 11320
            },
            {
                "name": "ancestralSequenceTest",
                "start": 11322,
                "end": 11478
            },
            {
                "name": "distancesInitial",
                "start": 11480,
                "end": 11512
            },
            {
                "name": "distancesNewview",
                "start": 11516,
                "end": 11608
            },
            {
                "name": "printTreeRec",
                "start": 11610,
                "end": 11639
            },
            {
                "name": "printTree",
                "start": 11641,
                "end": 11729
            },
            {
                "name": "rootTree",
                "start": 11731,
                "end": 11786
            },
            {
                "name": "partitionHasInvariantSites",
                "start": 11788,
                "end": 11813
            },
            {
                "name": "checkAscBias",
                "start": 11815,
                "end": 11847
            },
            {
                "name": "analyzeTip",
                "start": 11853,
                "end": 12087
            },
            {
                "name": "analyzeMissing",
                "start": 12091,
                "end": 12110
            },
            {
                "name": "predictMissingSequence",
                "start": 12257,
                "end": 12663
            },
            {
                "name": "main",
                "start": 12670,
                "end": 13157
            }
        ],
        "optimizeModel.c": [
            {
                "name": "brentGeneric",
                "start": 84,
                "end": 85
            },
            {
                "name": "brakGeneric",
                "start": 87,
                "end": 89
            },
            {
                "name": "setRateModel",
                "start": 104,
                "end": 164
            },
            {
                "name": "initLinkageList",
                "start": 170,
                "end": 212
            },
            {
                "name": "initLinkageListGTR",
                "start": 215,
                "end": 290
            },
            {
                "name": "changeModelParameters",
                "start": 292,
                "end": 357
            },
            {
                "name": "freeLinkageList",
                "start": 360,
                "end": 369
            },
            {
                "name": "updateWeights",
                "start": 372,
                "end": 387
            },
            {
                "name": "optimizeWeights",
                "start": 390,
                "end": 421
            },
            {
                "name": "evaluateChange",
                "start": 422,
                "end": 644
            },
            {
                "name": "brentGeneric",
                "start": 649,
                "end": 863
            },
            {
                "name": "brakGeneric",
                "start": 867,
                "end": 1177
            },
            {
                "name": "optInvar",
                "start": 1187,
                "end": 1190
            },
            {
                "name": "minFreq",
                "start": 1240,
                "end": 1268
            },
            {
                "name": "maxFreq",
                "start": 1270,
                "end": 1298
            },
            {
                "name": "optParamGeneric",
                "start": 1301,
                "end": 1608
            },
            {
                "name": "optFreqs",
                "start": 1612,
                "end": 1623
            },
            {
                "name": "optBaseFreqs",
                "start": 1627,
                "end": 1775
            },
            {
                "name": "optRates",
                "start": 1804,
                "end": 1812
            },
            {
                "name": "AAisGTR",
                "start": 1817,
                "end": 1837
            },
            {
                "name": "AAisUnlinkedGTR",
                "start": 1839,
                "end": 1859
            },
            {
                "name": "optRatesGeneric",
                "start": 1861,
                "end": 2067
            },
            {
                "name": "optLG4X",
                "start": 2076,
                "end": 2141
            },
            {
                "name": "optAlphasGeneric",
                "start": 2143,
                "end": 2255
            },
            {
                "name": "catCompare",
                "start": 2267,
                "end": 2280
            },
            {
                "name": "categorizePartition",
                "start": 2284,
                "end": 2333
            },
            {
                "name": "optRateCatModel",
                "start": 2434,
                "end": 2505
            },
            {
                "name": "updatePerSiteRates",
                "start": 2518,
                "end": 2674
            },
            {
                "name": "optimizeRateCategories",
                "start": 2676,
                "end": 2847
            },
            {
                "name": "resetBranches",
                "start": 2857,
                "end": 2878
            },
            {
                "name": "fixZ",
                "start": 2880,
                "end": 2889
            },
            {
                "name": "getFracChange",
                "start": 2891,
                "end": 2897
            },
            {
                "name": "scaleBranches",
                "start": 2898,
                "end": 3014
            },
            {
                "name": "printAAmatrix",
                "start": 3018,
                "end": 3104
            },
            {
                "name": "optScaler",
                "start": 3108,
                "end": 3111
            },
            {
                "name": "autoProtein",
                "start": 3113,
                "end": 3233
            },
            {
                "name": "checkTolerance",
                "start": 3240,
                "end": 3253
            },
            {
                "name": "modOpt",
                "start": 3257,
                "end": 3516
            },
            {
                "name": "branchLength",
                "start": 3525,
                "end": 3544
            },
            {
                "name": "treeLengthRec",
                "start": 3547,
                "end": 3569
            },
            {
                "name": "treeLength",
                "start": 3571,
                "end": 3576
            },
            {
                "name": "targetFunk",
                "start": 3587,
                "end": 3622
            },
            {
                "name": "fixBound",
                "start": 3630,
                "end": 3643
            },
            {
                "name": "lnsrch",
                "start": 3648,
                "end": 3759
            },
            {
                "name": "minimizeMultiDimen",
                "start": 3774,
                "end": 3851
            },
            {
                "name": "freeAll",
                "start": 3863,
                "end": 3878
            },
            {
                "name": "dfpmin",
                "start": 3882,
                "end": 4029
            },
            {
                "name": "derivativeFunk",
                "start": 4046,
                "end": 4074
            },
            {
                "name": "optimizeRatesBFGS",
                "start": 4081,
                "end": 4146
            }
        ],
        "makenewzGenericSpecial.c": [
            {
                "name": "sumCAT_BINARY",
                "start": 63,
                "end": 119
            },
            {
                "name": "sumCAT",
                "start": 121,
                "end": 166
            },
            {
                "name": "coreGTRCAT_BINARY",
                "start": 289,
                "end": 341
            },
            {
                "name": "coreGTRCAT",
                "start": 437,
                "end": 507
            },
            {
                "name": "sumGTRCATPROT",
                "start": 611,
                "end": 679
            },
            {
                "name": "sumGTRCATSECONDARY",
                "start": 683,
                "end": 727
            },
            {
                "name": "sumCatFlex",
                "start": 730,
                "end": 774
            },
            {
                "name": "sumGTRCATSECONDARY_6",
                "start": 777,
                "end": 821
            },
            {
                "name": "sumGTRCATSECONDARY_7",
                "start": 823,
                "end": 867
            },
            {
                "name": "coreGTRCATPROT",
                "start": 956,
                "end": 1016
            },
            {
                "name": "coreCatFlex",
                "start": 1022,
                "end": 1090
            },
            {
                "name": "coreGammaFlex",
                "start": 1092,
                "end": 1158
            },
            {
                "name": "coreCatAsc",
                "start": 1160,
                "end": 1216
            },
            {
                "name": "coreGammaAsc",
                "start": 1219,
                "end": 1285
            },
            {
                "name": "coreGammaInvarFlex",
                "start": 1290,
                "end": 1371
            },
            {
                "name": "coreGTRCATSECONDARY",
                "start": 1374,
                "end": 1434
            },
            {
                "name": "coreGTRCATSECONDARY_6",
                "start": 1436,
                "end": 1496
            },
            {
                "name": "coreGTRCATSECONDARY_7",
                "start": 1498,
                "end": 1558
            },
            {
                "name": "coreGTRGAMMAINVAR_BINARY",
                "start": 1562,
                "end": 1627
            },
            {
                "name": "coreGTRGAMMAINVAR",
                "start": 1631,
                "end": 1709
            },
            {
                "name": "sumGAMMA_BINARY",
                "start": 1716,
                "end": 1782
            },
            {
                "name": "sumGAMMA_GAPPED_SAVE",
                "start": 1786,
                "end": 1878
            },
            {
                "name": "sumGAMMA",
                "start": 1884,
                "end": 1949
            },
            {
                "name": "coreGTRGAMMA_BINARY",
                "start": 1955,
                "end": 2010
            },
            {
                "name": "coreGTRGAMMA",
                "start": 2094,
                "end": 2163
            },
            {
                "name": "sumGAMMAPROT",
                "start": 2260,
                "end": 2340
            },
            {
                "name": "sumGAMMAPROT_LG4",
                "start": 2342,
                "end": 2423
            },
            {
                "name": "sumCatAsc",
                "start": 2531,
                "end": 2584
            },
            {
                "name": "sumGammaAsc",
                "start": 2586,
                "end": 2647
            },
            {
                "name": "sumGammaFlex",
                "start": 2650,
                "end": 2706
            },
            {
                "name": "sumGAMMASECONDARY",
                "start": 2708,
                "end": 2762
            },
            {
                "name": "sumGAMMASECONDARY_6",
                "start": 2764,
                "end": 2818
            },
            {
                "name": "sumGAMMASECONDARY_7",
                "start": 2820,
                "end": 2874
            },
            {
                "name": "coreGTRGAMMAPROT",
                "start": 3045,
                "end": 3099
            },
            {
                "name": "coreGTRGAMMAPROT_LG4",
                "start": 3101,
                "end": 3164
            },
            {
                "name": "coreGTRGAMMASECONDARY",
                "start": 3172,
                "end": 3226
            },
            {
                "name": "coreGTRGAMMASECONDARY_6",
                "start": 3228,
                "end": 3282
            },
            {
                "name": "coreGTRGAMMASECONDARY_7",
                "start": 3284,
                "end": 3338
            },
            {
                "name": "coreGTRGAMMAPROTINVAR",
                "start": 3340,
                "end": 3409
            },
            {
                "name": "coreGTRGAMMASECONDARYINVAR",
                "start": 3412,
                "end": 3481
            },
            {
                "name": "coreGTRGAMMASECONDARYINVAR_6",
                "start": 3483,
                "end": 3552
            },
            {
                "name": "coreGTRGAMMASECONDARYINVAR_7",
                "start": 3554,
                "end": 3623
            },
            {
                "name": "getVects",
                "start": 3626,
                "end": 3731
            },
            {
                "name": "makenewzIterative",
                "start": 3736,
                "end": 3950
            },
            {
                "name": "execCore",
                "start": 3958,
                "end": 4275
            },
            {
                "name": "topLevelMakenewz",
                "start": 4282,
                "end": 4490
            },
            {
                "name": "makenewzGeneric",
                "start": 5094,
                "end": 5141
            },
            {
                "name": "makenewzGenericDistance",
                "start": 5145,
                "end": 5168
            }
        ],
        "fastDNAparsimony.c": [
            {
                "name": "checkSeed",
                "start": 123,
                "end": 140
            },
            {
                "name": "getxnodeLocal",
                "start": 142,
                "end": 151
            },
            {
                "name": "computeTraversalInfoParsimony",
                "start": 153,
                "end": 184
            },
            {
                "name": "populationCount",
                "start": 209,
                "end": 212
            },
            {
                "name": "newviewParsimonyIterativeFast",
                "start": 614,
                "end": 816
            },
            {
                "name": "evaluateParsimonyIterativeFast",
                "start": 820,
                "end": 981
            },
            {
                "name": "evaluateParsimony",
                "start": 990,
                "end": 1021
            },
            {
                "name": "newviewParsimony",
                "start": 1024,
                "end": 1038
            },
            {
                "name": "insertParsimony",
                "start": 1046,
                "end": 1056
            },
            {
                "name": "buildNewTip",
                "start": 1073,
                "end": 1083
            },
            {
                "name": "buildSimpleTree",
                "start": 1085,
                "end": 1098
            },
            {
                "name": "testInsertParsimony",
                "start": 1101,
                "end": 1156
            },
            {
                "name": "restoreTreeParsimony",
                "start": 1159,
                "end": 1173
            },
            {
                "name": "addTraverseParsimony",
                "start": 1176,
                "end": 1186
            },
            {
                "name": "findAnyTipFast",
                "start": 1189,
                "end": 1192
            },
            {
                "name": "removeNodeParsimony",
                "start": 1197,
                "end": 1209
            },
            {
                "name": "rearrangeParsimony",
                "start": 1211,
                "end": 1320
            },
            {
                "name": "restoreTreeRearrangeParsimony",
                "start": 1323,
                "end": 1327
            },
            {
                "name": "isInformative",
                "start": 1395,
                "end": 1438
            },
            {
                "name": "determineUninformativeSites",
                "start": 1441,
                "end": 1473
            },
            {
                "name": "reorderNodes",
                "start": 1476,
                "end": 1508
            },
            {
                "name": "compressDNA",
                "start": 1515,
                "end": 1643
            },
            {
                "name": "stepwiseAddition",
                "start": 1647,
                "end": 1685
            },
            {
                "name": "markNodesInTree",
                "start": 1687,
                "end": 1697
            },
            {
                "name": "makeParsimonyTreeFast",
                "start": 1699,
                "end": 1891
            },
            {
                "name": "insertRandom",
                "start": 1896,
                "end": 1904
            },
            {
                "name": "buildSimpleTreeRandom",
                "start": 1912,
                "end": 1925
            },
            {
                "name": "checker",
                "start": 1927,
                "end": 1951
            },
            {
                "name": "markBranches",
                "start": 1959,
                "end": 1973
            },
            {
                "name": "findAnyTip",
                "start": 1977,
                "end": 1980
            },
            {
                "name": "randomInt",
                "start": 1983,
                "end": 1987
            },
            {
                "name": "makePermutation",
                "start": 1989,
                "end": 2008
            },
            {
                "name": "tipHomogeneityChecker",
                "start": 2017,
                "end": 2030
            },
            {
                "name": "makeRandomTree",
                "start": 2038,
                "end": 2081
            },
            {
                "name": "nodeRectifier",
                "start": 2085,
                "end": 2103
            },
            {
                "name": "makeParsimonyTree",
                "start": 2106,
                "end": 2109
            },
            {
                "name": "makeParsimonyTreeIncomplete",
                "start": 2111,
                "end": 2114
            },
            {
                "name": "setupBranchMetaInfo",
                "start": 2117,
                "end": 2169
            },
            {
                "name": "setupJointFormat",
                "start": 2173,
                "end": 2192
            },
            {
                "name": "setupBranchInfo",
                "start": 2199,
                "end": 2242
            },
            {
                "name": "testInsertFast",
                "start": 2244,
                "end": 2281
            },
            {
                "name": "traverseTree",
                "start": 2284,
                "end": 2299
            },
            {
                "name": "infoCompare",
                "start": 2311,
                "end": 2324
            },
            {
                "name": "classifyMP",
                "start": 2326,
                "end": 2596
            }
        ],
        "topologies.c": [
            {
                "name": "saveTopolRELLRec",
                "start": 52,
                "end": 79
            },
            {
                "name": "saveTopolRELL",
                "start": 81,
                "end": 105
            },
            {
                "name": "restoreTopolRELL",
                "start": 108,
                "end": 123
            },
            {
                "name": "initTL",
                "start": 128,
                "end": 141
            },
            {
                "name": "freeTL",
                "start": 144,
                "end": 153
            },
            {
                "name": "restoreTL",
                "start": 156,
                "end": 161
            },
            {
                "name": "resetTL",
                "start": 166,
                "end": 172
            },
            {
                "name": "saveTL",
                "start": 177,
                "end": 183
            },
            {
                "name": "tipValPtr",
                "start": 186,
                "end": 189
            },
            {
                "name": "cmpTipVal",
                "start": 192,
                "end": 199
            },
            {
                "name": "setupTopol",
                "start": 204,
                "end": 226
            },
            {
                "name": "freeTopol",
                "start": 229,
                "end": 233
            },
            {
                "name": "saveSubtree",
                "start": 236,
                "end": 279
            },
            {
                "name": "minSubtreeTip",
                "start": 282,
                "end": 300
            },
            {
                "name": "minTreeTip",
                "start": 303,
                "end": 310
            },
            {
                "name": "saveTree",
                "start": 313,
                "end": 330
            },
            {
                "name": "restoreTree",
                "start": 333,
                "end": 364
            },
            {
                "name": "initBestTree",
                "start": 369,
                "end": 419
            },
            {
                "name": "resetBestTree",
                "start": 423,
                "end": 429
            },
            {
                "name": "freeBestTree",
                "start": 432,
                "end": 445
            },
            {
                "name": "cmpSubtopol",
                "start": 455,
                "end": 476
            },
            {
                "name": "cmpTopol",
                "start": 480,
                "end": 491
            },
            {
                "name": "cmpTplScore",
                "start": 495,
                "end": 502
            },
            {
                "name": "findInList",
                "start": 511,
                "end": 536
            },
            {
                "name": "findTreeInList",
                "start": 540,
                "end": 548
            },
            {
                "name": "saveBestTree",
                "start": 551,
                "end": 612
            },
            {
                "name": "recallBestTree",
                "start": 615,
                "end": 621
            },
            {
                "name": "saveTreeListRec",
                "start": 630,
                "end": 648
            },
            {
                "name": "saveTreeInList",
                "start": 650,
                "end": 669
            },
            {
                "name": "restoreTreeInList",
                "start": 672,
                "end": 684
            },
            {
                "name": "initTreeList",
                "start": 689,
                "end": 702
            },
            {
                "name": "freeTreeList",
                "start": 705,
                "end": 714
            },
            {
                "name": "restoreTreeList",
                "start": 717,
                "end": 722
            },
            {
                "name": "resetTreeList",
                "start": 724,
                "end": 730
            },
            {
                "name": "saveTreeList",
                "start": 735,
                "end": 741
            }
        ],
        "rapidBootstrap.c": [
            {
                "name": "computeBOOTRAPID",
                "start": 61,
                "end": 133
            },
            {
                "name": "optimizeRAPID",
                "start": 141,
                "end": 210
            },
            {
                "name": "thoroughOptimization",
                "start": 214,
                "end": 295
            },
            {
                "name": "qupdate",
                "start": 311,
                "end": 327
            },
            {
                "name": "qsmoothLocal",
                "start": 333,
                "end": 356
            },
            {
                "name": "quickSmoothLocal",
                "start": 358,
                "end": 381
            },
            {
                "name": "treeOptimizeThorough",
                "start": 386,
                "end": 443
            }
        ],
        "leaveDropping.c": [
            {
                "name": "genericBitCount",
                "start": 119,
                "end": 129
            },
            {
                "name": "createHashTable",
                "start": 259,
                "end": 296
            },
            {
                "name": "searchHashTable",
                "start": 302,
                "end": 328
            },
            {
                "name": "insertIntoHashTable",
                "start": 336,
                "end": 348
            },
            {
                "name": "destroyHashTable",
                "start": 351,
                "end": 380
            },
            {
                "name": "updateEntryCount",
                "start": 383,
                "end": 402
            },
            {
                "name": "createHashTableIterator",
                "start": 405,
                "end": 431
            },
            {
                "name": "hashTableIteratorNext",
                "start": 433,
                "end": 472
            },
            {
                "name": "getCurrentValueFromHashTableIterator",
                "start": 477,
                "end": 482
            },
            {
                "name": "randomProfileElemHashFunction",
                "start": 488,
                "end": 503
            },
            {
                "name": "bitVectorEqual",
                "start": 506,
                "end": 523
            },
            {
                "name": "profileToArray",
                "start": 528,
                "end": 575
            },
            {
                "name": "convertHashtableToArray",
                "start": 580,
                "end": 648
            },
            {
                "name": "sortProfileElems",
                "start": 653,
                "end": 664
            },
            {
                "name": "getInfrequentBipartitions",
                "start": 669,
                "end": 705
            },
            {
                "name": "isUnionOfTreesAboveThreshold",
                "start": 708,
                "end": 721
            },
            {
                "name": "getBestDropset",
                "start": 727,
                "end": 839
            },
            {
                "name": "insertBipartitionPairDropset_helper",
                "start": 842,
                "end": 884
            },
            {
                "name": "insertBipartitionPairDropset",
                "start": 887,
                "end": 936
            },
            {
                "name": "randomDropsetHashFunctionSparse",
                "start": 941,
                "end": 956
            },
            {
                "name": "dropsetEqualFunctionSparse",
                "start": 959,
                "end": 977
            },
            {
                "name": "potentialProfileDropsets",
                "start": 980,
                "end": 1028
            },
            {
                "name": "destroyProfileElem",
                "start": 1031,
                "end": 1036
            },
            {
                "name": "destroyDropset",
                "start": 1039,
                "end": 1046
            },
            {
                "name": "getListOfConsensusBips",
                "start": 1049,
                "end": 1075
            },
            {
                "name": "getLengthOfList",
                "start": 1078,
                "end": 1087
            },
            {
                "name": "updateAndInsertElem",
                "start": 1093,
                "end": 1170
            },
            {
                "name": "restrictProfile",
                "start": 1173,
                "end": 1243
            },
            {
                "name": "determineGreedyDropset",
                "start": 1256,
                "end": 1424
            },
            {
                "name": "renormalizeBipartitions",
                "start": 1426,
                "end": 1481
            },
            {
                "name": "reconvertHashtable",
                "start": 1483,
                "end": 1512
            },
            {
                "name": "pruneTaxon",
                "start": 1514,
                "end": 1531
            },
            {
                "name": "computeRogueTaxa",
                "start": 1536,
                "end": 1668
            }
        ],
        "mem_alloc.c": [
            {
                "name": "outOfMemory",
                "start": 68,
                "end": 76
            },
            {
                "name": "rax_malloc",
                "start": 78,
                "end": 97
            },
            {
                "name": "rax_realloc",
                "start": 99,
                "end": 130
            },
            {
                "name": "rax_free",
                "start": 132,
                "end": 139
            },
            {
                "name": "rax_calloc",
                "start": 141,
                "end": 149
            }
        ],
        "newviewGenericSpecial.c": [
            {
                "name": "isGap",
                "start": 71,
                "end": 74
            },
            {
                "name": "noGap",
                "start": 76,
                "end": 79
            },
            {
                "name": "makeP_Flex",
                "start": 81,
                "end": 126
            },
            {
                "name": "makeP_FlexLG4",
                "start": 180,
                "end": 217
            },
            {
                "name": "newviewFlexCat",
                "start": 224,
                "end": 374
            },
            {
                "name": "newviewFlexGamma",
                "start": 376,
                "end": 523
            },
            {
                "name": "newviewAscCat",
                "start": 527,
                "end": 675
            },
            {
                "name": "newviewAscGamma",
                "start": 678,
                "end": 822
            },
            {
                "name": "makeP",
                "start": 836,
                "end": 1153
            },
            {
                "name": "newviewGTRCAT_BINARY",
                "start": 1160,
                "end": 1306
            },
            {
                "name": "newviewGTRGAMMA_BINARY",
                "start": 1656,
                "end": 1828
            },
            {
                "name": "newviewGTRCAT",
                "start": 1836,
                "end": 1982
            },
            {
                "name": "newviewGTRGAMMA",
                "start": 4515,
                "end": 4730
            },
            {
                "name": "newviewGTRCATPROT",
                "start": 5114,
                "end": 5412
            },
            {
                "name": "newviewGTRCATSECONDARY",
                "start": 5419,
                "end": 5567
            },
            {
                "name": "newviewGTRCATSECONDARY_6",
                "start": 5571,
                "end": 5719
            },
            {
                "name": "newviewGTRCATSECONDARY_7",
                "start": 5721,
                "end": 5869
            },
            {
                "name": "newviewGTRGAMMAPROT",
                "start": 5873,
                "end": 6254
            },
            {
                "name": "newviewGTRGAMMAPROT_LG4",
                "start": 6256,
                "end": 6640
            },
            {
                "name": "newviewGTRGAMMASECONDARY",
                "start": 7202,
                "end": 7344
            },
            {
                "name": "newviewGTRGAMMASECONDARY_6",
                "start": 7348,
                "end": 7490
            },
            {
                "name": "newviewGTRGAMMASECONDARY_7",
                "start": 7493,
                "end": 7634
            },
            {
                "name": "computeTraversalInfo",
                "start": 7642,
                "end": 7777
            },
            {
                "name": "newviewIterative",
                "start": 7783,
                "end": 8580
            },
            {
                "name": "newviewGeneric",
                "start": 8586,
                "end": 8602
            },
            {
                "name": "newviewGenericMasked",
                "start": 8607,
                "end": 8641
            }
        ],
        "models.c": [
            {
                "name": "smoothFreqs",
                "start": 70,
                "end": 157
            },
            {
                "name": "genericBaseFrequencies",
                "start": 160,
                "end": 273
            },
            {
                "name": "baseFrequenciesGTR",
                "start": 282,
                "end": 348
            },
            {
                "name": "putWAG",
                "start": 350,
                "end": 474
            },
            {
                "name": "initProtMat",
                "start": 476,
                "end": 3321
            },
            {
                "name": "updateFracChange",
                "start": 3371,
                "end": 3416
            },
            {
                "name": "initGeneric",
                "start": 3419,
                "end": 3614
            },
            {
                "name": "initReversibleGTR",
                "start": 3619,
                "end": 3801
            },
            {
                "name": "LnGamma",
                "start": 3804,
                "end": 3839
            },
            {
                "name": "IncompleteGamma",
                "start": 3843,
                "end": 3911
            },
            {
                "name": "PointNormal",
                "start": 3916,
                "end": 3941
            },
            {
                "name": "PointChi2",
                "start": 3944,
                "end": 4002
            },
            {
                "name": "makeGammaCats",
                "start": 4009,
                "end": 4063
            },
            {
                "name": "genericInvariant",
                "start": 4065,
                "end": 4117
            },
            {
                "name": "setRates",
                "start": 4119,
                "end": 4126
            },
            {
                "name": "initRateMatrix",
                "start": 4128,
                "end": 4207
            },
            {
                "name": "setSymmetry",
                "start": 4209,
                "end": 4218
            },
            {
                "name": "setupSecondaryStructureSymmetries",
                "start": 4220,
                "end": 4403
            },
            {
                "name": "initModel",
                "start": 4405,
                "end": 4524
            }
        ],
        "parsePartitions.c": [
            {
                "name": "lineContainsOnlyWhiteChars",
                "start": 61,
                "end": 74
            },
            {
                "name": "isNum",
                "start": 77,
                "end": 82
            },
            {
                "name": "skipWhites",
                "start": 85,
                "end": 89
            },
            {
                "name": "analyzeIdentifier",
                "start": 91,
                "end": 459
            },
            {
                "name": "setModel",
                "start": 463,
                "end": 473
            },
            {
                "name": "myGetline",
                "start": 476,
                "end": 531
            },
            {
                "name": "parsePartitions",
                "start": 535,
                "end": 843
            },
            {
                "name": "handleExcludeFile",
                "start": 847,
                "end": 1255
            },
            {
                "name": "parseProteinModel",
                "start": 1258,
                "end": 1318
            },
            {
                "name": "parseSecondaryStructure",
                "start": 1323,
                "end": 1696
            }
        ],
        "bipartitionList.c": [
            {
                "name": "checkTreeNumber",
                "start": 87,
                "end": 95
            },
            {
                "name": "initEntry",
                "start": 100,
                "end": 119
            },
            {
                "name": "initHashTable",
                "start": 124,
                "end": 167
            },
            {
                "name": "freeHashTable",
                "start": 172,
                "end": 218
            },
            {
                "name": "cleanupHashTable",
                "start": 222,
                "end": 307
            },
            {
                "name": "initBitVector",
                "start": 309,
                "end": 329
            },
            {
                "name": "freeBitVectors",
                "start": 331,
                "end": 337
            },
            {
                "name": "newviewBipartitionsMultifurcating",
                "start": 347,
                "end": 437
            },
            {
                "name": "insertHash",
                "start": 440,
                "end": 461
            },
            {
                "name": "countHash",
                "start": 465,
                "end": 489
            },
            {
                "name": "insertHashAll",
                "start": 491,
                "end": 555
            },
            {
                "name": "insertHashBootstop",
                "start": 559,
                "end": 620
            },
            {
                "name": "insertHashRF",
                "start": 622,
                "end": 710
            },
            {
                "name": "bitVectorInitravSpecial",
                "start": 714,
                "end": 803
            },
            {
                "name": "linkBipartitions",
                "start": 805,
                "end": 843
            },
            {
                "name": "readSingleTree",
                "start": 846,
                "end": 873
            },
            {
                "name": "calcBipartitions",
                "start": 877,
                "end": 949
            },
            {
                "name": "insertHash_IC",
                "start": 954,
                "end": 1007
            },
            {
                "name": "findHash_IC",
                "start": 1011,
                "end": 1035
            },
            {
                "name": "compatibleIC",
                "start": 1037,
                "end": 1074
            },
            {
                "name": "sortByBipNumber",
                "start": 1076,
                "end": 1086
            },
            {
                "name": "sortByTreeSet",
                "start": 1088,
                "end": 1098
            },
            {
                "name": "countIncompatibleBipartitions",
                "start": 1102,
                "end": 1269
            },
            {
                "name": "computeIC_Value",
                "start": 1271,
                "end": 1353
            },
            {
                "name": "printSplit",
                "start": 1355,
                "end": 1411
            },
            {
                "name": "printFullySupportedSplit",
                "start": 1413,
                "end": 1437
            },
            {
                "name": "printVerboseTaxonNames",
                "start": 1439,
                "end": 1456
            },
            {
                "name": "printVerboseIC",
                "start": 1458,
                "end": 1506
            },
            {
                "name": "bitVectorInitravIC",
                "start": 1511,
                "end": 1639
            },
            {
                "name": "allTreesEqualSize",
                "start": 1642,
                "end": 1707
            },
            {
                "name": "calcBipartitions_IC",
                "start": 1712,
                "end": 1824
            },
            {
                "name": "calcBipartitions_IC_Global",
                "start": 1828,
                "end": 1871
            },
            {
                "name": "compareBips",
                "start": 1880,
                "end": 2021
            },
            {
                "name": "computeRF",
                "start": 2025,
                "end": 2282
            },
            {
                "name": "oat_hash",
                "start": 2291,
                "end": 2310
            },
            {
                "name": "insertHashPlausibility",
                "start": 2314,
                "end": 2357
            },
            {
                "name": "findHash",
                "start": 2363,
                "end": 2386
            },
            {
                "name": "rec_findBipartitions",
                "start": 2396,
                "end": 2508
            },
            {
                "name": "rec_extractBipartitionsMulti",
                "start": 2514,
                "end": 2617
            },
            {
                "name": "preOrderTraversal",
                "start": 2624,
                "end": 2658
            },
            {
                "name": "rec_extractTaxa",
                "start": 2663,
                "end": 2688
            },
            {
                "name": "rec_preOrderTraversalMulti",
                "start": 2691,
                "end": 2731
            },
            {
                "name": "rec_initBitVector",
                "start": 2736,
                "end": 2748
            },
            {
                "name": "rec_freeBitVector",
                "start": 2751,
                "end": 2758
            },
            {
                "name": "eulerTour",
                "start": 2761,
                "end": 2787
            },
            {
                "name": "unrootedEulerTour",
                "start": 2790,
                "end": 2840
            },
            {
                "name": "sortIntegers",
                "start": 2844,
                "end": 2857
            },
            {
                "name": "plausibilityChecker",
                "start": 2871,
                "end": 3227
            },
            {
                "name": "convergenceCriterion",
                "start": 3233,
                "end": 3269
            },
            {
                "name": "permute",
                "start": 3276,
                "end": 3288
            },
            {
                "name": "testFreq",
                "start": 3294,
                "end": 3347
            },
            {
                "name": "frequencyCriterion",
                "start": 3349,
                "end": 3445
            },
            {
                "name": "wcCriterion",
                "start": 3450,
                "end": 3653
            },
            {
                "name": "computeBootStopOnly",
                "start": 3660,
                "end": 3776
            },
            {
                "name": "bootStop",
                "start": 3915,
                "end": 3963
            },
            {
                "name": "compatible",
                "start": 3970,
                "end": 4000
            },
            {
                "name": "sortByWeight",
                "start": 4004,
                "end": 4019
            },
            {
                "name": "sortByIndex",
                "start": 4021,
                "end": 4025
            },
            {
                "name": "_sortByWeight0",
                "start": 4027,
                "end": 4030
            },
            {
                "name": "_sortByWeight1",
                "start": 4032,
                "end": 4035
            },
            {
                "name": "issubset",
                "start": 4037,
                "end": 4047
            },
            {
                "name": "mre",
                "start": 4050,
                "end": 4170
            },
            {
                "name": "sortByAmountTips",
                "start": 4184,
                "end": 4194
            },
            {
                "name": "calculateIC",
                "start": 4200,
                "end": 4259
            },
            {
                "name": "printBipsRecursive",
                "start": 4263,
                "end": 4360
            },
            {
                "name": "printSortedBips",
                "start": 4365,
                "end": 4527
            },
            {
                "name": "computeConsensusOnly",
                "start": 4532,
                "end": 4740
            },
            {
                "name": "sortuiuiTuple",
                "start": 4758,
                "end": 4769
            },
            {
                "name": "issubsetPart",
                "start": 4772,
                "end": 4843
            },
            {
                "name": "isBsubsetA",
                "start": 4846,
                "end": 4927
            },
            {
                "name": "areCongruentPart",
                "start": 4930,
                "end": 4948
            },
            {
                "name": "areCompatibleBipMask",
                "start": 4954,
                "end": 4999
            },
            {
                "name": "areCompatibleBipMaskMask",
                "start": 5002,
                "end": 5046
            },
            {
                "name": "computeIC_ValueD",
                "start": 5049,
                "end": 5134
            },
            {
                "name": "setupMask",
                "start": 5143,
                "end": 5167
            },
            {
                "name": "initTaxonMaskArray",
                "start": 5185,
                "end": 5205
            },
            {
                "name": "addTaxonMask",
                "start": 5209,
                "end": 5274
            },
            {
                "name": "freeTaxonMask",
                "start": 5278,
                "end": 5292
            },
            {
                "name": "initReferenceMaskArray",
                "start": 5320,
                "end": 5351
            },
            {
                "name": "addReferenceMask",
                "start": 5355,
                "end": 5424
            },
            {
                "name": "freeReferenceMask",
                "start": 5428,
                "end": 5444
            },
            {
                "name": "calcCongruenceMatrix",
                "start": 5447,
                "end": 5473
            },
            {
                "name": "insertHashPartial",
                "start": 5478,
                "end": 5578
            },
            {
                "name": "bitVectorInitravPartial",
                "start": 5583,
                "end": 5682
            },
            {
                "name": "setBit",
                "start": 5685,
                "end": 5691
            },
            {
                "name": "unsetBit",
                "start": 5695,
                "end": 5698
            },
            {
                "name": "readBit",
                "start": 5701,
                "end": 5707
            },
            {
                "name": "invertBits",
                "start": 5725,
                "end": 5735
            },
            {
                "name": "randomBipartitionFill",
                "start": 5738,
                "end": 5770
            },
            {
                "name": "mergeBipartitions",
                "start": 5773,
                "end": 5839
            },
            {
                "name": "getSubPart",
                "start": 5842,
                "end": 5985
            },
            {
                "name": "adjustScoreUniform",
                "start": 5988,
                "end": 6023
            },
            {
                "name": "polyaDistr",
                "start": 6028,
                "end": 6073
            },
            {
                "name": "adjustScoreBipart",
                "start": 6078,
                "end": 6240
            },
            {
                "name": "findMaximalBipartitions",
                "start": 6243,
                "end": 6335
            },
            {
                "name": "processAllMaximalPartialBips",
                "start": 6338,
                "end": 6500
            },
            {
                "name": "calculatePotentialFrequencies",
                "start": 6503,
                "end": 6527
            },
            {
                "name": "findConflictingBipartitions",
                "start": 6530,
                "end": 6564
            },
            {
                "name": "correctionForPartialBipartitions",
                "start": 6566,
                "end": 6702
            },
            {
                "name": "prepareAndComputeIC",
                "start": 6705,
                "end": 6779
            },
            {
                "name": "calcBipartitions_IC_PartialGeneTrees",
                "start": 6782,
                "end": 7206
            }
        ],
        "avxLikelihood.c": [
            {
                "name": "hadd4",
                "start": 33,
                "end": 49
            },
            {
                "name": "hadd3",
                "start": 51,
                "end": 61
            },
            {
                "name": "newviewGTRGAMMA_AVX",
                "start": 64,
                "end": 342
            },
            {
                "name": "newviewGTRGAMMA_AVX_GAPPED_SAVE",
                "start": 347,
                "end": 854
            },
            {
                "name": "newviewGTRCAT_AVX",
                "start": 859,
                "end": 1026
            },
            {
                "name": "newviewGTRCAT_AVX_GAPPED_SAVE",
                "start": 1029,
                "end": 1328
            },
            {
                "name": "newviewGTRCATPROT_AVX",
                "start": 1330,
                "end": 1656
            },
            {
                "name": "newviewGTRCATPROT_AVX_GAPPED_SAVE",
                "start": 1658,
                "end": 2174
            },
            {
                "name": "newviewGTRGAMMAPROT_AVX",
                "start": 2178,
                "end": 2671
            },
            {
                "name": "newviewGTRGAMMAPROT_AVX_LG4",
                "start": 2676,
                "end": 3170
            },
            {
                "name": "newviewGTRGAMMAPROT_AVX_GAPPED_SAVE",
                "start": 3173,
                "end": 4100
            }
        ],
        "treeIO.c": [
            {
                "name": "initStringHashTable",
                "start": 59,
                "end": 101
            },
            {
                "name": "hashString",
                "start": 104,
                "end": 112
            },
            {
                "name": "addword",
                "start": 116,
                "end": 139
            },
            {
                "name": "lookupWord",
                "start": 141,
                "end": 153
            },
            {
                "name": "countTips",
                "start": 156,
                "end": 173
            },
            {
                "name": "getBranchLength",
                "start": 177,
                "end": 252
            },
            {
                "name": "Tree2StringREC",
                "start": 257,
                "end": 367
            },
            {
                "name": "collectSubtrees",
                "start": 370,
                "end": 393
            },
            {
                "name": "checkOM",
                "start": 395,
                "end": 412
            },
            {
                "name": "rootedTreeREC",
                "start": 414,
                "end": 476
            },
            {
                "name": "rootedTree",
                "start": 478,
                "end": 554
            },
            {
                "name": "Tree2String",
                "start": 558,
                "end": 688
            },
            {
                "name": "printTreePerGene",
                "start": 691,
                "end": 713
            },
            {
                "name": "treeFinishCom",
                "start": 725,
                "end": 739
            },
            {
                "name": "treeGetCh",
                "start": 742,
                "end": 755
            },
            {
                "name": "treeLabelEnd",
                "start": 758,
                "end": 778
            },
            {
                "name": "treeGetLabel",
                "start": 782,
                "end": 839
            },
            {
                "name": "treeFlushLabel",
                "start": 842,
                "end": 845
            },
            {
                "name": "treeFindTipByLabelString",
                "start": 850,
                "end": 866
            },
            {
                "name": "treeFindTipName",
                "start": 869,
                "end": 881
            },
            {
                "name": "treeEchoContext",
                "start": 885,
                "end": 947
            },
            {
                "name": "treeProcessLength",
                "start": 952,
                "end": 996
            },
            {
                "name": "treeFlushLen",
                "start": 999,
                "end": 1023
            },
            {
                "name": "treeNeedCh",
                "start": 1029,
                "end": 1058
            },
            {
                "name": "addElementLen",
                "start": 1062,
                "end": 1177
            },
            {
                "name": "uprootTree",
                "start": 1189,
                "end": 1327
            },
            {
                "name": "treeReadLen",
                "start": 1330,
                "end": 1549
            },
            {
                "name": "addElementLenMULT",
                "start": 1556,
                "end": 1664
            },
            {
                "name": "treeReadLenMULT",
                "start": 1670,
                "end": 1808
            },
            {
                "name": "getStartingTree",
                "start": 1815,
                "end": 1927
            },
            {
                "name": "nextNodeOutOfBounds",
                "start": 1935,
                "end": 1943
            },
            {
                "name": "addMultifurcation",
                "start": 1945,
                "end": 2004
            },
            {
                "name": "printMultiFurc",
                "start": 2006,
                "end": 2030
            },
            {
                "name": "allocateMultifurcations",
                "start": 2032,
                "end": 2074
            },
            {
                "name": "freeMultifurcations",
                "start": 2076,
                "end": 2087
            },
            {
                "name": "relabelInnerNodes",
                "start": 2089,
                "end": 2121
            },
            {
                "name": "readMultifurcatingTree",
                "start": 2124,
                "end": 2284
            }
        ],
        "searchAlgo.c": [
            {
                "name": "initrav",
                "start": 62,
                "end": 81
            },
            {
                "name": "update",
                "start": 93,
                "end": 166
            },
            {
                "name": "smooth",
                "start": 171,
                "end": 192
            },
            {
                "name": "allSmoothed",
                "start": 194,
                "end": 208
            },
            {
                "name": "smoothTree",
                "start": 212,
                "end": 249
            },
            {
                "name": "localSmooth",
                "start": 253,
                "end": 287
            },
            {
                "name": "resetInfoList",
                "start": 293,
                "end": 304
            },
            {
                "name": "initInfoList",
                "start": 306,
                "end": 319
            },
            {
                "name": "freeInfoList",
                "start": 321,
                "end": 324
            },
            {
                "name": "insertInfoList",
                "start": 327,
                "end": 351
            },
            {
                "name": "smoothRegion",
                "start": 354,
                "end": 376
            },
            {
                "name": "regionalSmooth",
                "start": 378,
                "end": 411
            },
            {
                "name": "removeNodeBIG",
                "start": 417,
                "end": 439
            },
            {
                "name": "removeNodeRestoreBIG",
                "start": 441,
                "end": 456
            },
            {
                "name": "insertBIG",
                "start": 459,
                "end": 545
            },
            {
                "name": "insertRestoreBIG",
                "start": 547,
                "end": 583
            },
            {
                "name": "restoreTopologyOnly",
                "start": 586,
                "end": 652
            },
            {
                "name": "testInsertBIG",
                "start": 655,
                "end": 750
            },
            {
                "name": "addTraverseBIG",
                "start": 755,
                "end": 768
            },
            {
                "name": "rearrangeBIG",
                "start": 774,
                "end": 888
            },
            {
                "name": "treeOptimizeRapid",
                "start": 894,
                "end": 1014
            },
            {
                "name": "testInsertRestoreBIG",
                "start": 1019,
                "end": 1071
            },
            {
                "name": "restoreTreeFast",
                "start": 1073,
                "end": 1077
            },
            {
                "name": "updateRellTrees",
                "start": 1081,
                "end": 1126
            },
            {
                "name": "determineRearrangementSetting",
                "start": 1128,
                "end": 1228
            },
            {
                "name": "computeBIGRAPID",
                "start": 1244,
                "end": 1613
            },
            {
                "name": "treeEvaluate",
                "start": 1618,
                "end": 1632
            },
            {
                "name": "setupBranches",
                "start": 1634,
                "end": 1673
            },
            {
                "name": "smoothTreeRandom",
                "start": 1677,
                "end": 1734
            },
            {
                "name": "treeEvaluateRandom",
                "start": 1737,
                "end": 1744
            },
            {
                "name": "treeEvaluateProgressive",
                "start": 1746,
                "end": 1773
            }
        ],
        "fastSearch.c": [
            {
                "name": "addInsertion",
                "start": 73,
                "end": 91
            },
            {
                "name": "insertFast",
                "start": 98,
                "end": 181
            },
            {
                "name": "testInsertFast",
                "start": 186,
                "end": 231
            },
            {
                "name": "testInsertCandidates",
                "start": 233,
                "end": 274
            },
            {
                "name": "getSubtreeRoots",
                "start": 284,
                "end": 300
            },
            {
                "name": "insertBeyond",
                "start": 316,
                "end": 382
            },
            {
                "name": "fourCompare",
                "start": 398,
                "end": 411
            },
            {
                "name": "scoreCompare",
                "start": 413,
                "end": 426
            },
            {
                "name": "linearSPRs",
                "start": 431,
                "end": 660
            },
            {
                "name": "allSmoothed",
                "start": 665,
                "end": 679
            },
            {
                "name": "nniSmooth",
                "start": 681,
                "end": 730
            },
            {
                "name": "storeBranches",
                "start": 733,
                "end": 749
            },
            {
                "name": "SHSupport",
                "start": 752,
                "end": 846
            },
            {
                "name": "setupBranchInfo",
                "start": 848,
                "end": 874
            },
            {
                "name": "doNNIs",
                "start": 879,
                "end": 1078
            },
            {
                "name": "encapsulateNNIs",
                "start": 1081,
                "end": 1112
            },
            {
                "name": "permutationSH",
                "start": 1114,
                "end": 1187
            },
            {
                "name": "fastSearch",
                "start": 1195,
                "end": 1325
            },
            {
                "name": "shSupports",
                "start": 1328,
                "end": 1462
            }
        ],
        "rmqs.c": [
            {
                "name": "lsb",
                "start": 47,
                "end": 49
            },
            {
                "name": "log2fast",
                "start": 71,
                "end": 80
            },
            {
                "name": "clearbits",
                "start": 84,
                "end": 86
            },
            {
                "name": "query",
                "start": 93,
                "end": 180
            },
            {
                "name": "RMQ_succinct",
                "start": 186,
                "end": 358
            },
            {
                "name": "RMQ_succinct_destroy",
                "start": 363,
                "end": 372
            }
        ],
        "evaluatePartialGenericSpecial.c": [
            {
                "name": "computeVectorGTRCATPROT",
                "start": 242,
                "end": 318
            },
            {
                "name": "evaluatePartialGTRCATPROT",
                "start": 320,
                "end": 370
            },
            {
                "name": "computeVectorGTRCATSECONDARY",
                "start": 374,
                "end": 450
            },
            {
                "name": "computeVectorFlex",
                "start": 453,
                "end": 530
            },
            {
                "name": "computeVectorGTRCATSECONDARY_6",
                "start": 533,
                "end": 609
            },
            {
                "name": "computeVectorGTRCATSECONDARY_7",
                "start": 612,
                "end": 688
            },
            {
                "name": "computeVectorGTRCAT",
                "start": 691,
                "end": 768
            },
            {
                "name": "computeVectorGTRCAT_BINARY",
                "start": 775,
                "end": 843
            },
            {
                "name": "evaluatePartialGTRCAT_BINARY",
                "start": 845,
                "end": 890
            },
            {
                "name": "evaluatePartialGTRCAT",
                "start": 893,
                "end": 940
            },
            {
                "name": "evaluatePartialGTRCATSECONDARY",
                "start": 945,
                "end": 995
            },
            {
                "name": "evaluatePartialFlex",
                "start": 998,
                "end": 1046
            },
            {
                "name": "evaluatePartialGTRCATSECONDARY_6",
                "start": 1049,
                "end": 1099
            },
            {
                "name": "evaluatePartialGTRCATSECONDARY_7",
                "start": 1101,
                "end": 1151
            },
            {
                "name": "computeFullTraversalInfo",
                "start": 1160,
                "end": 1273
            },
            {
                "name": "determineFullTraversal",
                "start": 1275,
                "end": 1291
            },
            {
                "name": "evaluatePartialGeneric",
                "start": 1297,
                "end": 1389
            }
        ],
        "evaluateGenericSpecial.c": [
            {
                "name": "ascertainmentBiasSequence",
                "start": 59,
                "end": 88
            },
            {
                "name": "calcDiagptableFlex",
                "start": 90,
                "end": 120
            },
            {
                "name": "calcDiagptableFlex_LG4",
                "start": 123,
                "end": 146
            },
            {
                "name": "evaluateCatFlex",
                "start": 149,
                "end": 250
            },
            {
                "name": "evaluateCatAsc",
                "start": 254,
                "end": 340
            },
            {
                "name": "evaluateGammaAsc",
                "start": 343,
                "end": 437
            },
            {
                "name": "evaluateGammaFlex",
                "start": 441,
                "end": 554
            },
            {
                "name": "evaluateGammaFlex_LG4",
                "start": 556,
                "end": 677
            },
            {
                "name": "evaluateGammaInvarFlex",
                "start": 681,
                "end": 819
            },
            {
                "name": "calcDiagptable",
                "start": 823,
                "end": 929
            },
            {
                "name": "evaluateGTRCATPROT",
                "start": 1162,
                "end": 1244
            },
            {
                "name": "evaluateGTRCATSECONDARY",
                "start": 1247,
                "end": 1298
            },
            {
                "name": "evaluateGTRCATSECONDARY_6",
                "start": 1300,
                "end": 1351
            },
            {
                "name": "evaluateGTRCATSECONDARY_7",
                "start": 1353,
                "end": 1404
            },
            {
                "name": "evaluateGTRCAT_BINARY",
                "start": 1406,
                "end": 1482
            },
            {
                "name": "evaluateGTRGAMMA_BINARY",
                "start": 1485,
                "end": 1591
            },
            {
                "name": "evaluateGTRGAMMAINVAR_BINARY",
                "start": 1593,
                "end": 1662
            },
            {
                "name": "evaluateGTRCAT",
                "start": 1665,
                "end": 1787
            },
            {
                "name": "evaluateGTRGAMMA",
                "start": 1930,
                "end": 2058
            },
            {
                "name": "evaluateGTRGAMMAINVAR",
                "start": 2068,
                "end": 2139
            },
            {
                "name": "evaluateGTRGAMMAPROT",
                "start": 2144,
                "end": 2235
            },
            {
                "name": "evaluateGTRGAMMAPROT_LG4",
                "start": 2238,
                "end": 2301
            },
            {
                "name": "evaluateGTRGAMMASECONDARY",
                "start": 2419,
                "end": 2474
            },
            {
                "name": "evaluateGTRGAMMASECONDARY_6",
                "start": 2476,
                "end": 2531
            },
            {
                "name": "evaluateGTRGAMMASECONDARY_7",
                "start": 2533,
                "end": 2588
            },
            {
                "name": "evaluateGTRGAMMAPROTINVAR",
                "start": 2590,
                "end": 2660
            },
            {
                "name": "evaluateGTRGAMMASECONDARYINVAR",
                "start": 2662,
                "end": 2733
            },
            {
                "name": "evaluateGTRGAMMASECONDARYINVAR_6",
                "start": 2735,
                "end": 2806
            },
            {
                "name": "evaluateGTRGAMMASECONDARYINVAR_7",
                "start": 2808,
                "end": 2879
            },
            {
                "name": "evaluateIterative",
                "start": 2882,
                "end": 3505
            },
            {
                "name": "evaluateGeneric",
                "start": 3510,
                "end": 3574
            },
            {
                "name": "evaluateGenericInitrav",
                "start": 3579,
                "end": 3626
            },
            {
                "name": "onlyInitrav",
                "start": 3631,
                "end": 3640
            },
            {
                "name": "evaluateGenericVector",
                "start": 3976,
                "end": 4033
            }
        ],
        "eigen.c": [
            {
                "name": "mytred2",
                "start": 36,
                "end": 116
            },
            {
                "name": "mytqli",
                "start": 119,
                "end": 193
            },
            {
                "name": "makeEigen",
                "start": 196,
                "end": 200
            }
        ],
        "rogueEPA.c": [
            {
                "name": "testInsertThorough",
                "start": 52,
                "end": 96
            },
            {
                "name": "traverseBias",
                "start": 115,
                "end": 181
            },
            {
                "name": "findRec",
                "start": 189,
                "end": 214
            },
            {
                "name": "getNodeDistance",
                "start": 216,
                "end": 225
            },
            {
                "name": "computePlacementBias",
                "start": 227,
                "end": 421
            }
        ],
        "ancestralStates.c": [
            {
                "name": "getStateCharacter",
                "start": 56,
                "end": 82
            },
            {
                "name": "makeP_Flex_Ancestral",
                "start": 84,
                "end": 119
            },
            {
                "name": "ancestralCat",
                "start": 121,
                "end": 149
            },
            {
                "name": "newviewFlexCat_Ancestral",
                "start": 151,
                "end": 301
            },
            {
                "name": "ancestralGamma",
                "start": 305,
                "end": 343
            },
            {
                "name": "newviewFlexGamma_Ancestral",
                "start": 346,
                "end": 494
            },
            {
                "name": "newviewIterativeAncestral",
                "start": 495,
                "end": 623
            },
            {
                "name": "traversalInfoAncestralRoot",
                "start": 624,
                "end": 684
            },
            {
                "name": "newviewGenericAncestral",
                "start": 687,
                "end": 721
            },
            {
                "name": "computeAncestralRec",
                "start": 730,
                "end": 888
            },
            {
                "name": "ancestralTreeRec",
                "start": 890,
                "end": 913
            },
            {
                "name": "ancestralTree",
                "start": 916,
                "end": 932
            },
            {
                "name": "computeAncestralStates",
                "start": 934,
                "end": 996
            }
        ]
    }
}